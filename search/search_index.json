{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Network Notes","text":""},{"location":"about/","title":"About","text":"<p>Billy Zoellers is a Solutions Engineer at Cisco, serving a select, strategic group of manufacturing customers in Ohio, Indiana, Michigan, and Kentucky. In his role as Cisco, Billy acts as technical advisor providing pre-sales support to customers for the entire Cisco product portfolio.</p> <p>Prior to joining Cisco, Billy worked as a network infrastructure consultant at a Cisco partner. He has extensive experience designing and implementing robust technology solutions. His technical acumen lies in route/switch, Cisco Firepower, the Meraki cloud-managed portfolio, Cisco SD-WAN, Amazon Web Services, and network automation.</p> <p> </p>"},{"location":"letsencrypt-vmware-view/","title":"Let's Encrypt certificates for VMware Horizon","text":"<p>Recently, I needed to renew the SSL certificates on a VMware Horizon View deployment. I chose to make this the last year of paid SSL certifcates, and move the deployment over to Let's Encrypt. </p> <p>There are surely numerous approaches to do this with all code or just minimal code. In this case, the Certify the Web's Windows application fit the bill for making future renewals and changes supportable by an IT staff that doesn't have much experience with scripting.</p> <p>In this tutorial, Certify the Web is configured to handle the heavy lifting of Let's Encrypt's ACME certificate renewal process. PowerShell scripts are then used to deploy the newly minted certificates into VMware Horizon View and VMware's Unified Access Gateway (UAG) product.</p>"},{"location":"letsencrypt-vmware-view/#certify-the-web-configuraiton","title":"Certify the Web configuraiton","text":"<p>Install and configure Certify the Web on both the internal and external VMware Horizon Connection Server.</p> Perform these steps on all connection servers <p>The following configuration should be completed on both the internal and external VMware HCS. This process will result in each server having it's own unique certificate and private key. The UAG will share a key with the HCS it is paired with.</p> <p>After the installation has completed, choose New Certificate and configure a new certificate using the parameters below:</p>"},{"location":"letsencrypt-vmware-view/#certificate","title":"Certificate","text":"<ol> <li>Add your view domain <code>view.company.com</code> to the certificate. This will be the same on both VMware HCS.</li> <li>Add a domain for this specific server. For example: <code>view-internal.company.com</code> for the internal HCS, or <code>view-external.company.com</code> for the external HCS. Mark this domain name as primary.</li> <li>On the HCS paired with VMware UAG only, add a domain for the UAG. For example: <code>view-uag.company.com</code>.</li> </ol> Must use registered domains <p>You must use a public (registered) domain for this step even if the HCS or UAG do not have their own domain name in external DNS. Let's Encrypt will not issue certificates for IP addresses or <code>.local</code> domain names.</p>"},{"location":"letsencrypt-vmware-view/#authorization","title":"Authorization","text":"<p>Select Challenge Type of <code>dns-01</code>. Make sure to configure the other settings on this page appropriately so that Certify the Web can create <code>_acme-challenge</code> records at your DNS provider of choice.</p>"},{"location":"letsencrypt-vmware-view/#deployment","title":"Deployment","text":"<p>Choose Deployment Mode of <code>Certificate Store Only</code>.</p>"},{"location":"letsencrypt-vmware-view/#tasks","title":"Tasks","text":""},{"location":"letsencrypt-vmware-view/#all-horizon-connection-servers","title":"All Horizon Connection Servers","text":"<ol> <li> <p>Create a directory on the server for SSL automation tasks. For example <code>C:\\ssl-automation</code></p> </li> <li> <p>Save this script in the new <code>ssl-automation</code> folder. Then create a Run Powershell Script task that will run the script:     C:\\ssl-automation\\rename-cert.ps1<pre><code>param($result)\n\n# Proceed only if Certify the Web reports success\nif ($result.IsSuccess) {\n    # Remove any certificate named 'vdm' to avoid duplication\n    Get-ChildItem -Path cert:\\LocalMachine\\My | Where {$_.FriendlyName.Equals(\"vdm\")} | Remove-Item\n\n    # Rename new Let's Encrypt certificate to 'vdm'\n    $thumbprint = $result.ManagedItem.CertificateThumbprintHash\n    $cert = Get-ChildItem -Path cert:\\LocalMachine\\My\\$thumbprint\n    $cert.FriendlyName =\"vdm\"\n}\n</code></pre></p> </li> <li> <p>Create a Stop, Start or Restart a Service task, choosing to restart the VMware Horizon View Connection Server (wsbroker) service. Extend the Max. Wait Time (secs) to 120 seconds.</p> </li> </ol>"},{"location":"letsencrypt-vmware-view/#connection-server-paired-with-uag","title":"Connection Server paired with UAG","text":"External Connection Server only <p>The next two steps should be taken only on the VMware HCS paired with the UAG. This server will be responsible for renewal of the UAG's certificate, as well as it's own.</p> <ol> <li> <p>Create a Deploy to Generic Server (multi-purpose) task to export the key and full chain of the certificate. These files will be consumed by the PowerShell script in the next step.</p> <p>a. Task Parameters &gt; Output filepath for key: <code>C:\\ssl-automation\\view.key</code></p> <p>b. Task Parameters &gt; Output filepath for full chain: <code>C:\\ssl-automation\\view.crt</code></p> </li> <li> <p>Save this script in the new <code>ssl-automation</code> folder. Then create a Run Powershell Script task that will run this script.</p> <p>You will need to set two variables in the <code>deploy-uag.ps1</code> file:</p> <code>$uag_host</code> <p>This should be set to either the DNS resolvable hostname of your UAG server or it's IP address.</p> <code>$uag_cred</code> <p>This should be set to the base64 encoding of <code>username:password</code> for your UAG server. You can create this value here: base64encode.org</p> C:\\ssl-automation\\deloy-uag.ps1<pre><code>param($result)\n\n### UPDATE THESE VARIABLES\n$uag_host = \"&lt;hostname-of-UAG&gt;\"\n$uag_cred = \"&lt;api-key-of-UAG&gt;\"\n### END OF VARIABLES\n\n# Ignore SSL errors for these API requests\nadd-type @\"\n    using System.Net;\n    using System.Security.Cryptography.X509Certificates;\n    public class TrustAllCertsPolicy : ICertificatePolicy {\n        public bool CheckValidationResult(\n            ServicePoint srvPoint, X509Certificate certificate,\n            WebRequest request, int certificateProblem) {\n            return true;\n        }\n    }\n\"@\n[System.Net.ServicePointManager]::CertificatePolicy = New-Object TrustAllCertsPolicy\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Ssl3, [Net.SecurityProtocolType]::Tls, [Net.SecurityProtocolType]::Tls11, [Net.SecurityProtocolType]::Tls12\n\nif ($result.IsSuccess) {\n    # Transform PEM key and certificate into single text lines\n    $key_oneline = (Get-Content -Path C:\\ssl-automation\\view.key) -join \"\\n\"\n    $cert_oneline = (Get-Content -Path C:\\ssl-automation\\view.crt) -join \"\\n\"\n\n    # Use API endpoints for both the 'internet' and 'admin' SSL certificate\n    $endpoints = @(\n        \"https://$($uag_host):9443/rest/v1/config/certs/ssl\",\n        \"https://$($uag_host):9443/rest/v1/config/certs/ssl/admin\"\n    )\n\n    # Use REST to update the cert chain and key for both specified endpoints\n    $data = '{\"privateKeyPem\":\"' + $key_oneline + '\",\"certChainPem\":\"' + $cert_oneline + '\"}'\n    $endpoints | ForEach-Object {\n        Invoke-RestMethod `\n        -Uri $_ `\n        -Headers @{ \"Authorization\" = \"Basic $uag_cred\" } `\n        -Method Put `\n        -Body $data `\n        -ContentType \"application/json\"\n    }\n}\n</code></pre> </li> </ol>"},{"location":"letsencrypt-vmware-view/#deploy-the-certificates","title":"Deploy the certificates","text":"<p>Choose Save and then Request Certificate in Certify the Web. You can monitor the process status in the Certify the Web application.</p>"},{"location":"callmanager-find-replace/","title":"Automating Cisco CallManager","text":"<p>Last week, I was presented with the need to modify a number of translation patterns in Cisco CallManager (CUCM) to support the implementation with a new auto attendant for one of my customers.</p> <p>If you've worked with CUCM before, you likely know that translation patterns work similarly to NAT for phone calls. For example: you might set a translation pattern's calledPartyTransformationMask to map a call to an external number from a remote party to an internal extension in your organization.</p> <p>API's are much more interesting to me than the intricacies of CUCM, so I'll save you the headache of hearing about that. Suffice it to say: there isn't an easy way to find all translation patterns with a specific calledPartyTransformationMask and modify that mask to reflect a new internal extension.</p> <p>I'll start with the end product. My Python solution was a simple \"find and replace\" tool for calledPartyTransformationMasks within the translation patterns on CUCM. It's simple to use, and allows for both the \"find\" and \"find and replace\" operation.</p> <pre><code>find_replace_mask.py &lt;mask_to_find&gt; &lt;optional: mask_to_replace_with&gt;\n</code></pre> <p> </p> \"Find\" operation - find all translation patterns with a specified calledPartyTransformationMask"},{"location":"callmanager-find-replace/#ciscoaxl-python-library","title":"Ciscoaxl Python Library","text":"<p>Starting off, I just want to point out how easy to use the ciscoaxl Python library is. Shoutout to Presido for making this available to the community. The CUCM AXL API can be daunting, but this library makes working with it a breeze.</p> Connect to CallManager and get a list of all translation patterns<pre><code>ucm = axl(\n    username=\"cmadmin\",\n    password=\"yourCUCMPassword\",\n    cucm=\"yourCUCM.yourcompany.com\",\n    cucm_version=\"11.5\"\n)\n\npatterns = ucm.get_translations()\n</code></pre>"},{"location":"callmanager-find-replace/#list-comprehensions","title":"List Comprehensions","text":"<p>Another Python option I really enjoy is the ability to perform list comprehensions. In this case, I used a list comprehension to sort through the list of patterns, and create a smaller list that only includes patterns matching the . List comprehension to filter the list of translation patterns<pre><code>find_mask = argv[1]\nreplace_patterns = [pattern for pattern in patterns if pattern['calledPartyTransformationMask'] in find_mask]\n</code></pre> <p>Don't feel daunted by that long single line of code! Here is what it's actually doing.</p> The 'long version' of a list comprehension<pre><code># Create a new list\nreplace_patterns = []\n# Iterate through each pattern\nfor pattern in patterns:\n    # If the calledPartyTransformationmask matches, add this pattern\n    # to the new list\n    if pattern['calledPartyTransformationMask'] in find_mask:\n        replace_patterns.append(pattern)\n</code></pre> <p>List comprehensions were confusing for me when starting off with Python, but I love the complexity that you can hide within a single line of code.</p>"},{"location":"callmanager-find-replace/#rich-library","title":"Rich Library","text":"<p>I finish my tool off with the rich library for Python. This is a phenomenal option for creating formatted, rich text at the command line. It's capable of much more than the simple table output in my script.</p> <p>I created a helper function to take in a list of translation pattern objects, and return a table object that can be printed to the console by rich.</p> Creating a table to display with rich<pre><code>def patterns_table(patterns):\n  table = Table(show_header=True, header_style=\"bold red\")\n  table.add_column(\"Pattern\")\n  table.add_column(\"calledPartyTransformationMask\")\n  table.add_column(\"Description\")\n\n  for pattern in patterns:\n    table.add_row(\n      pattern['pattern'],\n      pattern['calledPartyTransformationMask'],\n      pattern['description']\n    )\n\n  return table\n</code></pre> <p>Displaying this table is super simple, and makes the output much more readable.</p> Print a table object with rich<pre><code>console = Console()\ntable = patterns_table(replace_patterns)\nconsole.print(table)\n</code></pre> <p>There is a bit more to my find and replace tool that I haven't covered here, so if you'd like to check it out in it's entirety it is available to review and use on GitHub! All in all, this tool allowed our team to replace the calledPartyTransformationMask on about 20 translation patterns in a single run of the script.</p> <p>https://github.com/bzoel/py-net-scripts/tree/master/cucm/find_replace_mask</p>"},{"location":"cards-on-webex/","title":"What are Cards on Webex Teams?","text":"<p>Over the past year we've seen exciting new additions to the Webex Teams API that introduce some exciting new options for bots and integrations to interact with end users. One of these additions is support for 'in chat' buttons &amp; cards.</p> <p>Buttons &amp; cards add a new way to format messages in Webex Teams - before diving in, let's take a look at the previous message formatting options:</p>"},{"location":"cards-on-webex/#plain-text","title":"Plain Text","text":"<p>This is is pretty obvious. Plain text probably the most common message format you'll find. As a user I send many plain text messages every day, and they achieve my goal! Using the API, bots can exchange plan text messages with users. Let's consider a support ticketing application; when a ticket is received, a bot could message the tech support room with a heads up:</p> <p> </p> A 'plain text' message in Webex Teams <p>Problem solved. Our bot can let us know a new ticket has been received with a few pertinent details like the ticket number and company name. The message is straightforward, but doesn't include too much information. We could include more, but that might look like a wall of text to the user. Our user can login to the support ticketing application and gather more information.</p>"},{"location":"cards-on-webex/#markdown","title":"Markdown","text":"<p>The support ticketing bot was a huge success! And now our users want more information details provided in Webex Teams so they can decide how important a ticket is directly from the tech support team chat. Introducing markdown. Markdown is a common formatting syntax on the web, touted as being easy to read and write.</p> <p>Webex Teams does not support the full set of markdown formatting options, but the limited set it does support will allow us to improve the bot's message formatting. The Webex API basics guide provides some details on the specific options that are supported. Here's an example of a markdown formatted message:</p> <p> </p> A 'markdown' formatted message in Webex Teams <p>This helps quite a bit! We can use rich text formatting to differentiate between the data in this message.</p>"},{"location":"cards-on-webex/#cards","title":"Cards","text":"<p>Using markdown allowed us to provide more data in a more readable fashion - which is a major improvement. Our users want more! What if they could see all the information included on a support ticket, without ever leaving Webex Teams?</p> <p>Buttons &amp; Cards were introduced for Webex Teams in August 2019, and they are based on the Adaptive Cards framework from Microsoft.</p> <p>The Adaptive Cards framework allows us to insert small UI snippets - called cards - into the Webex Teams interface. Let's improve our support ticket bot by using an adaptive card in the tech support room:</p> <p> </p> An Adaptive Card in Webex Teams <p>Success! We can now display all the specific about the ticket, but everything looks well formatted and easy to read for the end users.</p>"},{"location":"cat-on-meraki-getting-started/","title":"Catalyst on Meraki: Getting Started","text":"Two Catalyst 9300 switches monitored in Meraki Dashboard <p>Cisco Live 2022 represents the birth of \"Catalyst on Meraki\", a new feature that brings traditional Cisco Catalyst hardware into the Meraki Dashboard. You have the option to use two 'modes' of operation:</p>"},{"location":"cat-on-meraki-getting-started/#catalyst-on-meraki-modes","title":"Catalyst on Meraki modes","text":""},{"location":"cat-on-meraki-getting-started/#monitor-mode-or-dna-mode","title":"Monitor mode (or DNA mode)","text":"<p>Available now! Switches will continue to run IOS-XE and be configured via the CLI (or your configuration tool of choice). Initial support includes C9200, C9300, and C9500. No downtime to enable this.</p>"},{"location":"cat-on-meraki-getting-started/#meraki-mode","title":"Meraki mode","text":"<p>Coming soon. This mode will essentially turn your Catalyst switch into an MS390. Initial support will include the first release C9300 models, and IOS-XE 17.8.1+ will be required. This will require a reboot of the switch into Meraki mode, and you'll need to reconfigure from the Meraki cloud.</p> <p>Since monitor mode is available now, I'm sure you're asking how to get started. Let's give it a try!</p>"},{"location":"cat-on-meraki-getting-started/#getting-started","title":"Getting Started","text":"<p>The onboarding process involves a Windows/Mac/Linux application called Cloud Monitoring for Catalyst that connects to your Meraki dashboard using the Dashboard API (REST) and creates an initial monitoring configuration on your Catalyst switch using SSH. Check out that process here:</p> <p>Whoops. You didn't think I was going to make it that easy did you? The configuration of our Catalyst switches caused a little issue. Taking a look behind the Meraki-simple curtain, here's what happened:</p> Onboarding commands<pre><code>switch#show history all\n...\nCMD: 'terminal width 0' 20:29:32 EDT Tue Jun 14 2022\nCMD: 'terminal length 0' 20:29:35 EDT Tue Jun 14 2022\nCMD: 'enable' 20:29:37 EDT Tue Jun 14 2022\nCMD: 'show platform sudi certificate' 20:29:40 EDT Tue Jun 14 2022\nCMD: 'show version' 20:29:46 EDT Tue Jun 14 2022\nCMD: 'show clock detail' 20:29:48 EDT Tue Jun 14 2022\nCMD: 'telnet us.tlsgw.meraki.com 443' 20:29:51 EDT Tue Jun 14 2022\nCMD: 'exit' 20:29:51 EDT Tue Jun 14 2022\n</code></pre> <p>Using <code>show history all</code> I was able to review the CLI commands executed by the Cloud Monitoring for Catalyst application. In our case <code>telnet us.tlsgw.meraki.com 443</code> was failing because of the VTY configuration on this switch.</p> Nonworking VTY line configuration<pre><code>switch#show run | sec line vty 0\nline vty 0 4\n exec-timeout 60 0\n privilege level 15\n transport input ssh\n transport output ssh\n</code></pre> <p>Let's change this to <code>transport output all</code> and try again!</p> <p>You may have noticed in the video, that Cloud Monitoring for Catalyst applied some CLI configuration to the Catalyst switch. This new configuration does a few things:</p> <ul> <li>Enable netconf-yang, IP routing, and LLDP</li> <li>Create AAA configuration with a user and certificate for SSH from Meraki</li> <li>Create a TLS tunnel to the Meraki Dashboard</li> </ul> <p>You can review this configuration by using the show details button within the onboarding wizard. I have included the detailed configuration below:</p> Meraki IOS-XE configuration<pre><code>! Ensure old tunnel config is removed.\nno crypto tls-tunnel MERAKI-PRIMARY\n\n! Ensure old CA certificates are removed.\nno crypto pki trustpoint MERAKI_TLSGW_CA\n  yes\n\n! Ensure old access-lists are removed.\nno ip access-list extended MERAKI_VTY_IN\nno ip access-list extended MERAKI_VTY_OUT\n\n! Enable netconf (requires ip routing).\nnetconf-yang\nip routing\n\n! Enable LLDP for topology.\nlldp run\n\n! Configure SSH v2 with publickey authentication for cloud authentication.\nip ssh version 2\nip ssh server algorithm authentication publickey password keyboard\n\n! Prevent traffic that should be in the tunnel from falling back to default route when the tunnel is down.\nip route 18.232.244.158 255.255.255.255 Null 0\n\n! Create local authentication group for SSH through the TLS tunnel.\naaa authentication login MERAKI local\naaa authorization exec MERAKI local\n\n! Create ACL for cloud SSH ingress.\n! Allow only port 2222 for SSH.\nip access-list extended MERAKI_VTY_IN\n  10 permit tcp host 18.232.244.158 any eq 2222\n  20 deny   tcp any any\n\n! Create ACL for cloud telemetry egress.\n! Allow only port 2022 for SFTP to the cloud.\nip access-list extended MERAKI_VTY_OUT\n  10 permit tcp any host 18.232.244.158 eq 2022\n  20 deny   tcp any any\n\n! Configure a SSH rotary to use port 2222.\nip ssh port 2222 rotary 50\n\n! Enable SSH to VTY lines to be dedicated for cloud.\n! Use ACL and AAA groups to secure connections.\nline vty 32 33\n  access-class MERAKI_VTY_IN in\n  access-class MERAKI_VTY_OUT out\n  authorization exec MERAKI\n  login authentication MERAKI\n  rotary 50\n  transport input ssh\n  exit\n\n! Configure a local Meraki user with SSH Keys for SSH and NETCONF access.\nusername meraki-user privilege 15 secret 9 &lt;secret&gt;\nip ssh pubkey-chain\n  username meraki-user\n    key-string\n      &lt;key string&gt;\n\nexit\nexit\nexit\n\n! Import the correct certificate authority for SSL verification.\ncrypto pki trustpoint MERAKI_TLSGW_CA\nenrollment terminal\ncrypto pki authenticate MERAKI_TLSGW_CA\n-----BEGIN CERTIFICATE-----\n&lt;certificate&gt;\n-----END CERTIFICATE-----\nquit\nyes\n\n! Configure trustpoint for SSL verification.\ncrypto pki trustpoint MERAKI_TLSGW_CA\n  enrollment url flash://MERAKI_TLSGW_CA\n  revocation-check none\n\n! Create Loopback interface for TLS tunnel overlay.\ninterface Loopback1000\n  description Meraki TLS Connection\nexit\n\n! Configure TLS tunnel for Cloud Connectivity.\n! Selecting the preferred source based on the current default route.\ncrypto tls-tunnel MERAKI-PRIMARY\n  server url us.tlsgw.meraki.com port 443\n  overlay interface Loopback1000\n  local-interface TenGigabitEthernet2/1/8 priority 1\n  pki trustpoint CISCO_IDEVID_SUDI sign\n  pki trustpoint MERAKI_TLSGW_CA verify\n  no shut\n  exit\n</code></pre> <p>Once this is done, after a few minutes you'll see your Catalyst switch in the Meraki Dashboard.</p> <p></p> <p></p>"},{"location":"cisco-sdwan-upgrade/","title":"Let's upgrade Cisco SD-WAN","text":"<p>I've long raved about how easy it is to perform an upgrade to the components of Cisco SD-WAN. Join me as we upgrade to the new gold star - 20.6.3 for the Viptela components with 17.6.3a for the cEdge.</p> <p>The environment is currently running the previous gold star release of Cisco SD-WAN:</p> <ul> <li>vManage/vSmart/vBond 20.3.5</li> <li>vEdge 20.3.5</li> <li>IOS-XE (cEdge) 17.3.4a</li> </ul> <p>The environment is fairly straightforward, with Cisco cloud deployed controllers, including 2 vSmart and 2 vBond. There is a single vEdge 1000 left, and the rest of the devices are a mix of cEdge - specifically ISR4331, ISR4431, and Catalyst 8300.</p>"},{"location":"cisco-sdwan-upgrade/#step-1-download-images","title":"Step 1: Download images","text":"<p>You'll need a few different images for the upgrade, and they can be uploaded to the software repository in vManage (Maintenance &gt; Software Repository &gt; Software Images).</p> <p> </p> Current software repository <p>I'll upload each of the images with Add new Software &gt; vManage, so that each image ends up on our vManage.</p> Software Image Details <ul> <li>vManage itself vmanage-20.6.3-x86_64.tar.gz</li> <li>vSmart and vBond viptela-20.6.3-x86_64.tar.gz</li> <li>MIPS based vEdge models (vEdge 1000) viptela-20.6.3-mips64.tar.gz</li> <li>IOS-XE for ISR4300 series (ISR 4331) isr4300-universalk9.17.06.03a.SPA.bin</li> <li>IOS-XE for ISR4400 series (ISR 4431) isr4400-universalk9.17.06.03a.SPA.bin</li> <li>IOS-XE for Catalyst 8xxx Edge platforms (Catalyst 8300) c8000be-universalk9.17.06.03a.SPA.bin</li> </ul> <p> </p> Upload software to vManage"},{"location":"cisco-sdwan-upgrade/#step-2-upgrade-vmanage","title":"Step 2: Upgrade vManage","text":"<p>So far, we've only staged files within vManage's Software Repository. No images have been sent to devices, and nothing has been upgraded. Our first step is to apply the upgrade image to vManage.</p>"},{"location":"cisco-sdwan-upgrade/#first-take-a-backup","title":"First, Take a backup","text":"<p>Before beginning the upgrade, I always take a backup of vManage's configuration database. Just SSH into vManage and use the <code>request nms configuration-db backup path &lt;path&gt;</code> command.</p> Database backup procedure for vManage<pre><code>vManage# request nms configuration-db backup path bz-06-28-22\nStarting backup of configuration-db\nconfig-db backup logs are available in /var/log/nms/neo4j-backup.log file\nconfig-db backup is successful. Running consistency check on the backedup database.\nSuccessfully saved database to /opt/data/backup/bz-06-28-22.tar.gz\n</code></pre> <p>Make sure to copy the file to a safe location once it has completed.</p>"},{"location":"cisco-sdwan-upgrade/#start-the-upgrade","title":"Start the upgrade","text":"<p>You can begin the upgrade by navigating to Maintenance &gt; Software Upgrade &gt; vManage.</p> <p>Tip</p> <p>vManage is completely out of band management. It is not involved in the transfer of data, generation of encryption keys, or exchange of routing information. During the upgrade, vManage will be unavailable. This won't have any impact on production traffic.</p> <p>From there, use the Upgrade button to select the new image to apply to vManage.</p> <p> </p> Upgrade vManage <p> </p> vManage Software Install <p>So far, we're still running the old version of software (20.3.5). The new version has been downloaded to a new partition and is prepared for activation. We'll need to activate that partition using the Activate option within Maintenance &gt; Software Upgrade &gt; vManage.</p> <p> </p> Activate vManage Software <p>At this point, vMange will be unavailable for a few minutes while the activation completes. I would suggest starting a constant ping to monitor the progress.</p> <p>After the vManage upgrade has successfully completed, you'll want to do a bit of quick cleanup.</p>"},{"location":"cisco-sdwan-upgrade/#set-default-version","title":"Set Default Version","text":"<p>Activating the software does not automatically set the default version of software upon reboot. This way, if something were to fail, vManage would reboot to the old (working) software partition. Go to Maintenance &gt; Software Upgrade &gt; vManage and choose Set Default Version.</p>"},{"location":"cisco-sdwan-upgrade/#delete-old-verisons","title":"Delete Old Verison(s)","text":"<p>Though not required, I prefer to cleanup old and unnecessary software images. In my case, 20.3.5 and 20.3.4 are installed - along with the new version 20.6.3. I prefer to leave a partition with the last version (20.3.5) installed in case of a quick rollback. Head over to Maintenance &gt; Software Upgrade &gt; vManage and then choose Delete Available Software. In my case, I'll delete 20.3.4.</p>"},{"location":"cisco-sdwan-upgrade/#step-3-upgrade-vsmart-vbond","title":"Step 3: Upgrade vSmart / vBond","text":"<p>After a successful vManage upgrade, it's time to upgrade our controllers - vSmart and vBond. Navigate to Maintenance &gt; Software Upgrade &gt; Controllers. You have the option to choose one or many controllers to upgrade.</p> <p> </p> Controller Software Upgrade <p>I'm going to choose all four controllers (two vSmart and two vBond) and select Upgrade.</p> <p>We can skip a step here, and choose the Activate and Reboot option. This will cause the software image to be installed to each controller and then activated (which requires a reboot).</p> <p> </p> Controller Software Upgrade - Activate and Reboot <p>vSmart and vBond do not pass any data traffic themselves, but vSmart quite literally is the control plane of the network - responsible for calculating routing decisions and exchanging encryption keys.</p> <p>vManage has us covered with multiple features to ensure that there is no drop in the network during the upgrade.</p> <ol> <li>Each controller upgrades individually - with each subsequent device waiting for an \"OK\" from it's successor.</li> <li>By default OMP Graceful Restart is enabled. With this feature the Edge devices cache routing information for 12 hours. Data traffic would continue to flow if both vSmart went down, and the routing table would be repopulated upon a successful control connection.</li> </ol> <p> </p> Individual controller upgrades <p>The upgrades may take a few minutes (6-7 minutes per controller in my case) but this part of the process is touch-less. Just monitor the progress as each controller upgrades and reboots.</p> <p> </p> Controller Software Upgrade Complete <p>Success! All controllers are now running 20.6.3.</p> <p>As with the vManage upgrade, we'll want to head back to Maintenance &gt; Software Upgrade &gt; Controllers and take the same two cleanup steps: set the default version and remove old, unneeded software versions. Similar to vManage, I like to retain the previous image (20.3.5 in this case) as a fallback.</p>"},{"location":"cisco-sdwan-upgrade/#step-4-upgrade-vedge-cedge","title":"Step 4: Upgrade vEdge / cEdge","text":"<p>With a successfully upgraded management plane (vManage), control plane (vSmart) and orchestration plane (vBond) the last step is to upgrade the edge devices - or the data plane. Both cEdge and vEdge devices are upgraded using the exact same procedure.</p> <p>Navigate to Maintenance &gt; Software Upgrade &gt; WAN Edge to get started.</p> <p> </p> WAN Edge Software Upgrade <p>While you could choose all devices, and then Upgrade, I'll just choose a vEdge device and a cEdge device for the first round of upgrades. This process is very similar to the controller upgrade process. You can choose Activate and Reboot to proceed with the activation of the new image.</p> <p>Tip</p> <p>You can also not choose Activate and Reboot when upgrading WAN Edges. This will result in the new software image being installed on an inactive partition. When you're ready, this should result in a quicker Activate cycle for sites that do not have redundant WAN Edges.</p> <p> </p> WAN Edge Upgrade Complete <p>Notice that you get a play-by-play for each individual device. Take a look at the detailed log for the vEdge 1000 below: Individual Device Upgrade Log<pre><code>[29-Jun-2022 1:29:11 UTC] Software Install action submitted for execution\n[29-Jun-2022 1:29:11 UTC] Executing device action Software Install\n[29-Jun-2022 1:29:11 UTC] Installing and activating software image\n[29-Jun-2022 1:29:15 UTC] Current active partition: 20.3.5\n[29-Jun-2022 1:29:15 UTC] Upgrade Requested for SW version : 20.6.3\n[29-Jun-2022 1:29:16 UTC] Configuring upgrade confirm timer to 15 minutes\n[29-Jun-2022 1:29:16 UTC] Software image: viptela-20.6.3-mips64.tar.gz\n[29-Jun-2022 1:29:16 UTC] Software image download may take upto 60 minutes\n[29-Jun-2022 1:29:24 UTC] Connection Instance: 1, Color: public-internet\n[29-Jun-2022 1:29:24 UTC] Device: Downloading http://1.1.1.6:8080/software/package/viptela-20.6.3-mips64.tar.gz?deviceId=172.31.x.x\n[29-Jun-2022 1:32:25 UTC] Device: Downloaded http://1.1.1.6:8080/software/package/viptela-20.6.3-mips64.tar.gz?deviceId=172.31.x.x\n[29-Jun-2022 1:34:29 UTC] Device: Signature verification Suceeded.\nSignature verification Suceeded.\n[29-Jun-2022 1:34:29 UTC] Device: Installed 20.6.3\n[29-Jun-2022 1:34:29 UTC] Activating SW version 20.6.3\n[29-Jun-2022 1:34:29 UTC] Rebooting device to other partition. Device may take up to 30 minutes before it comes online\n[29-Jun-2022 1:35:29 UTC] (1/60) Operation status being verified by vManage\n...\n[29-Jun-2022 1:44:30 UTC] (19/60) Operation status being verified by vManage\n[29-Jun-2022 1:45:09 UTC] vManage: Sending upgrade-confirm to device\n[29-Jun-2022 1:45:31 UTC] vManage: Sending upgrade-confirm to device\n[29-Jun-2022 1:45:48 UTC] Operation status verification done.\n</code></pre></p> <p>After a successful WAN Edge upgrade - you'll still want to set the default image, and cleanup any old images. This is the same procedure performed on vManage, vSmart, and vBond. Like those devices, I suggest leaving the last good image as a fallback option.</p> <p>Once all WAN Edges are upgraded - you're done!</p>"},{"location":"meraki-typer/","title":"Meraki automation using Typer","text":"<p>In college, one of my Computer Science professors gave us some sage advice: </p> <p>Computer Scientists are lazy.</p> <p>He was right. Any time I can avoid spending time writing code that isn't related to my end goal - I'm all for it. It's an added bonus if I can use a library that gives me tools to easily make my end product more polished and professional.</p> <p>If you haven't heard of Typer, it's a library for building CLI applications. It boasts an easy to understand syntax, features to minimize code duplication, and options to provide auto-completion and automatic help for end users.</p>"},{"location":"meraki-typer/#overview","title":"Overview","text":"<p>I recently had a migration project from a Cisco ASA to Meraki MX firewall. The ASA had about 20 static NAT entries, each of which required the same set of 10 port allowances. It sounded a bit painful to enter all of that in the GUI, and luckily Meraki has a great API! I enlisted the help of Typer to create a CLI tool.</p> <p>In it's simplest form, the command line syntax looks like this:</p> <pre><code>create-staticnat &lt;org&gt; &lt;net&gt; --nat &lt;publicIP&gt;|&lt;privateIP&gt; --port &lt;proto&gt;|&lt;port&gt;\n</code></pre> <p>It takes in an organization and network name, a public/private IP pairing, as well as a protocol/port pairing. The result: a single static NAT entry with a single port permitted from 'any'. In my case, I needed this same syntax to work for multiple NAT entries - each with a set of permitted ports.</p> <pre><code>create-staticnat OrgName NetName --nat 192.0.2.5|192.168.5.5 --nat 192.0.2.6|192.168.5.6 --port tcp|443 --port udp|8000 --port tcp|80\n</code></pre> <p>The result? Two NAT entries (192.0.2.5 and 192.0.2.6), each with 3 ports permitted (TCP 80, TCP 443, and UDP 8000).</p>"},{"location":"meraki-typer/#using-lists-with-typer","title":"Using Lists with Typer","text":"<p>Typer makes it super easy to handle multiple inputs. Here's the definition of my function (and Typer command):</p> Typer command definition<pre><code>@app.command()\ndef create_staticnat(\n  organization_name:str,\n  network_name:str,\n  nat: Optional[List[str]] = typer.Option(None),\n  port: Optional[List[str]] = typer.Option(None)\n):\n  ....\n  # Get each NAT entry\n  for entry in nat:\n    public_ip, private_ip = entry.split(\"!\")\n\n    # Get the list of ports for each entry\n    for p in port:\n      proto, num = entry.split(\"!\")\n</code></pre> <p>I'm omitting the actual meat of my code above, but the important part of that you can ask Typer to accept a CLI option (like --nat) multiple times using this syntax: <code>nat: Optional[List[str]]</code>. The multiple options are presented as a Python list.  What happens if the user doesn't input any ports? They are \"options\" after all. The syntax <code>= typer.Option(None)</code> accounts for that by setting the default option to <code>None</code>. The result is that you can easily say:</p> <pre><code>if nat is None:\n  print(\"I have nothing to do!\")\n</code></pre> <p>Typer has great documentation, so don't just take my word for it: Multiple CLI Options.</p>"},{"location":"meraki-typer/#easy-documentation","title":"Easy Documentation","text":"<p>It's also great to have self documenting tools. I often create a tool like this, and end up wanting to share it with other members of my team. By defining everything with Typer a <code>--help</code> is generated for you.</p> Typer --help documentiation<pre><code>&gt; python .\\merakitools.py create-staticnat --help\nUsage: merakitools.py create-staticnat [OPTIONS] ORGANIZATION_NAME NETWORK_NAME\n\nArguments:\n  ORGANIZATION_NAME  [required]\n  NETWORK_NAME       [required]\n\nOptions:\n  --nat TEXT                      'publicIP|prviateIP' or\n                                  'name|publicIP|privateIP'\n\n  --port TEXT                     'protocol|portNum' or\n                                  'protocol|portNum|permittedIPs'\n\n  --uplink [internet1|internet2]  [default: internet1]\n  --confirm / --no-confirm        [default: True]\n  --help                          Show this message and exit.\n</code></pre> <p>It's so easy to do this - with Typer even accounting for things like set lists of options and true/false inputs.</p> Enum used with Typer<pre><code>class InternetUplink(str, Enum):\n  one = \"internet1\"\n  two = \"internet2\"\n\n@app.command()\ndef create_staticnat(\n  organization_name:str,\n  network_name:str,\n  nat: Optional[List[str]] = typer.Option(None, help=\"'publicIP|prviateIP' or 'name|publicIP|privateIP'\"),\n  port: Optional[List[str]] = typer.Option(None, help=\"'protocol|portNum' or 'protocol|portNum|permittedIPs'\"),\n  uplink: InternetUplink = InternetUplink.one,\n  confirm: bool = True\n):\n</code></pre> <p>In the example above, the uplink option is defined using Typer's Enum - Multiple Choices CLI parameter type. This gives the user only two valid choices: \"internet1\" or \"internet2\" - which will be passed into the function as \"one\" or \"two\". This is a great way to get help with your error checking.</p> <p>The confirm option is nice as well. By defining <code>confirm: bool = True</code>, the default option is to \"confirm\" input from the user. To avoid a conformation prompt, just enter the <code>--no-confirm</code> option.</p>"},{"location":"meraki-typer/#summary","title":"Summary","text":"<p>These examples are only a couple of Typer's many great features - and if you like what you see - check out FastAPI from the same developer.</p> <p>My Meraki tools project featured in the examples above is always a work in progress - and gets attention whenever there is something new I need to accomplish with the Meraki API. Please check it out on GitHub!</p> <p>https://github.com/billyzoellers/merakitools</p>"},{"location":"studies/ccie-ei/","title":"CCIE Enterprise","text":"<p>Notes from the Micronics CCIE class - beginning Nov 12, 2022.</p>"},{"location":"studies/ccie-ei/#sessions","title":"Sessions","text":"<p>19 total sessions</p> Date Topic Nov 12 DMVPN Nov 19 EIGRP Dec 3 EIGRP Dec 10 OSPF Dec 17 OSPF Jan 7 MPLS/L3VPN Jan 14 Multicast Jan 28 SDWAN / SD-Access (cancelled) Feb 4 SDWAN / SD-Access Feb 11 SDWAN / SD-Access Feb 18 SDWAN / SD-Access Feb 25 Automation Mar 4 BGP Mar 11 BGP Mar 18 BGP IPv6 NAT FHRP QoS and Redistribution Security Syslog, EEM, DHCP, and PBR"},{"location":"studies/ccie-ei/bgp/","title":"BGP","text":""},{"location":"studies/ccie-ei/bgp/#the-bgp-table","title":"The BGP table","text":"<pre><code>R1#show bgp ipv4 uni  \nBGP table version is 18, local router ID is 100.1.3.1\nStatus codes: s suppressed, d damped, h history, * valid, &gt; best, i - internal, \n              r RIB-failure, S Stale, m multipath, b backup-path, f RT-Filter, \n              x best-external, a additional-path, c RIB-compressed, \nOrigin codes: i - IGP, e - EGP, ? - incomplete\nRPKI validation codes: V valid, I invalid, N Not found\n\n     Network          Next Hop            Metric LocPrf Weight Path\n     0.0.0.0          0.0.0.0                                0 i\n *&gt;  1.1.1.1/32       0.0.0.0                  0         32768 i\n *b  2.2.2.2/32       13.1.1.3                               0 300 200 i\n *&gt;                   12.1.1.2                 0             0 200 i\n r&gt;i 4.0.0.0          14.1.1.4                 0    100      0 i\n *b  21.0.0.0         13.1.1.3                               0 300 200 ?\n *&gt;                   12.1.1.2                 0             0 200 ?\n *b  22.0.0.0         13.1.1.3                               0 300 200 i\n *&gt;                   12.1.1.2                 0             0 200 i\n *m  23.1.1.0/24      12.1.1.2                 0             0 200 i\n *&gt;                   13.1.1.3                 0             0 300 i\n s&gt;  100.1.0.0/24     0.0.0.0                  0         32768 i\n *&gt;  100.1.0.0/22     0.0.0.0                            32768 i\n s&gt;  100.1.1.0/24     0.0.0.0                  0         32768 i\n</code></pre>"},{"location":"studies/ccie-ei/bgp/#column-1","title":"Column 1","text":"<ul> <li><code>*</code> valid</li> <li><code>r</code> RIB-failure</li> <li><code>m</code> multipathing</li> <li><code>s</code> supressed: suppressed by a <code>summary-only</code> route that has been created to aggregate this route</li> <li><code>b</code> backup-path</li> </ul>"},{"location":"studies/ccie-ei/bgp/#column-2","title":"Column 2","text":"<ul> <li><code>&gt;</code> best path</li> </ul>"},{"location":"studies/ccie-ei/bgp/#column-3","title":"Column 3","text":"<ul> <li><code>i</code> learned via iBGP</li> <li><code>(blank)</code> learned from eBGP peer, or local router if next hop is <code>0.0.0.0</code></li> </ul>"},{"location":"studies/ccie-ei/bgp/#column-4","title":"Column 4","text":"<ul> <li><code>Network</code>: displayed without prefix length if network/subnet is classful</li> </ul>"},{"location":"studies/ccie-ei/bgp/#column-5","title":"Column 5","text":"<ul> <li><code>Next Hop</code>: <code>0.0.0.0</code> = we are the originator</li> </ul>"},{"location":"studies/ccie-ei/bgp/#column-6-7-8-path-attributes","title":"Column 6, 7, 8: Path attributes","text":"<ul> <li><code>MED</code></li> <li><code>LocPrf</code></li> <li><code>Weight</code></li> </ul>"},{"location":"studies/ccie-ei/bgp/#column-9","title":"Column 9","text":"<ul> <li><code>ASN</code></li> </ul>"},{"location":"studies/ccie-ei/bgp/#column-10","title":"Column 10","text":"<ul> <li><code>Origin code</code><ul> <li><code>0</code> = IGP (network command used to advertise this route)</li> <li><code>1</code> = EGP</li> <li><code>2</code> = Unknown (redistribution command used to advertise this route)</li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/dmvpn/","title":"DMVPN","text":""},{"location":"studies/ccie-ei/dmvpn/#philosophy-of-p2p-vs-mp","title":"Philosophy of P2P vs MP","text":"<ul> <li>Nonbroadcast, multiaccess network (NBMA)<ul> <li>Like ISDN, ATM, X25, Frame Relay (if configured in multipoint manner)</li> <li>Diagram != P2P or MP (Ethernet always MP, PPP, HDLC always P2P), encapsulation indicates type</li> <li>P2P network - no mapping needed</li> <li>MP network, requires mapping (ARP = L2:L3 mapping)</li> <li>DMVPN mapping L3:L3</li> </ul> </li> <li>Requires a full mesh underlay transport (i.e. internet, MPLS)</li> <li>NBMA IP - registered IP address from provider (underlay IP)</li> <li>Tunnel IP - doesn't mean private/public, just means inside of tunnel (overlay IP)</li> <li>Best routing protocols: EIGRP or BGP - OSPF, not as reliable in DMVPN</li> </ul>"},{"location":"studies/ccie-ei/dmvpn/#phase-1-2-3-designs","title":"Phase 1, 2, 3 designs","text":"<ul> <li>None of them are obsolete, just separate designs</li> <li>Hub router alwaysconfigured in mutlipoint manner</li> </ul> <p>Hub config <pre><code>interface Tunnel100\n    ip address &lt;tunnel.ip&gt; &lt;tunnel.mask&gt;\n    tunnel source &lt;nbma.ip&gt;\n    tunnel mode gre multipoint\n    ip nhrp network-id 100\n    ip nhrp map multicast dynamic ! Look into NHRP table for all NBMA IPs\n    no ip split-horizon eigrp 100\n</code></pre> Routing protocol config <pre><code>router eigrp 100\n    network &lt;tunnel.ip&gt; 0.0.0.0 ! better than 0.0.0.255, more specific\n    network &lt;other.networks&gt;\n</code></pre></p> <ul> <li>Hub is configured in a multipoint manner, can only unicast by default. Must use <code>ip nhrp map multicast dynamic</code> to create a table of NBMA addresses to multicast to.<ul> <li>EIGRP needs to be able to multicast hellos to spokes</li> <li><code>show ip nhrp multicast</code> Lists all registered multicast (NBMA) IPs.</li> <li>Could also just map statically: <pre><code>ip nhrp map multicast &lt;spoke.2.nbma.ip&gt;\nip nhrp map multicast &lt;spoke.3.nbma.ip&gt;\n</code></pre></li> </ul> </li> </ul> <p><code>tunnel mode gre multipoint</code> (mGRE or multipoint GRE) no tunnel desination specified, but requires a mapping</p> <p>i.e. to get to tunnel IP x.x.x.x, go to NBMA IP y.y.y.y</p> <p>NHRP (Next Hop Resolution Protocol) used to create this mapping - NHRP network-id is locally significant, similar to a PID.</p> <ul> <li> <p>NHRP must run on hub to provide mapping, but not requied on spoke. Running on spoke is common and provides scalability/zero touch on hub by sending their mapping to hub. Could just use static mappings... <pre><code>interface Tunnel100\n    ip nhrp map &lt;tunnel.ip&gt; &lt;nbma.ip&gt; ! Spoke 2\n    ip nhrp map &lt;tunnel.ip&gt; &lt;nbma.ip&gt; ! Spoke 3\n</code></pre></p> </li> <li> <p>NHRP has servers and clients</p> <ul> <li>Configured on spokes (client points to server)</li> <li>Could just leave everything as a server and it would work, but not efficient</li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/dmvpn/#phase-1","title":"Phase 1","text":"<ul> <li>Data plane = hub and spoke</li> <li>Spokes configured in P2P manner</li> <li>Spoke to spoke communication through hub router</li> </ul> <p>Spoke config <pre><code>interface Tunnel100\n    ip address &lt;tunnel.ip&gt; &lt;tunnel.mask&gt;\n    tunnel source &lt;nbma.ip&gt; ! OR &lt;nbma.intf&gt;\n    tunnel desination &lt;hub.nbma.ip&gt;\n    ip nhrp network-id 100\n    ip nhrp nhs &lt;hub.tunnel.ip&gt;\n    ip nhrp registration no_unique ! Optional: If we are DHCP client\n    ip nhrp registration timeout 5 ! Optional: For troubleshooting\n</code></pre></p> <p><code>ip nhrp registration no_unique</code> \"The IP I am registering with you is not unique and might change, I'm a DHCP client\". Hub would discard new registrations with different IP.</p> <p><code>ip nhrp registration timeout X</code> \"Send NHRP registration every X seconds, can clear issues if hub loses NHRP registrations</p>"},{"location":"studies/ccie-ei/dmvpn/#phase-2","title":"Phase 2","text":"<ul> <li>Data plane = full mesh</li> <li>Is basically a glorified phase 1 unless you manipulate the IGP</li> <li>Really better to move to phase 3</li> </ul> <p>Hub configuration changes - Manipulate IGP to not change next hop on recieved routes <pre><code>interface Tunnel100\n    no ip next-hop-self eigrp 100\n</code></pre></p> <p>Spoke configuration changes - Change to mGRE - Loses multicast capability, need to use NHRP for multicast capability <pre><code>interface Tunnel100\n    ! Change to mGRE\n    no tunnel destination &lt;hub.nbma.ip&gt;\n    tunnel mode gre multipoint\n\n    ! Use NHRP for multicast resolution\n    ip nhrp map multicast &lt;hub.nbma.ip&gt;\n\n    ! Statically map hub tunnel.ip:nbma.ip\n    ip nhrp map &lt;hub.tunnel.ip&gt; &lt;hub.nbma.ip&gt;\n</code></pre></p> <p>Note: Can also use <code>ip nhrp nhs &lt;hub.tunnel.ip&gt; nbma &lt;hub.nbma.ip&gt; multicast</code> to configure NHS, static map, and multicast at same time</p> <p>Why is first traceroute through hub, followed by the rest through spoke? - spoke didn't know remote spoke's NBMA address, and had to send resolution request to NHRP NHS</p>"},{"location":"studies/ccie-ei/dmvpn/#phase-3","title":"Phase 3","text":"<ul> <li>Data plane = full mesh</li> <li>Allows for summarization from the hub (which is not possible in Phase 2, b/c of routing protocol manipulation)</li> <li>Basically uses NHRP instead of routing table for spoke-to-spoke routing</li> </ul> <p>Hub configuration changes (from Phase 2): <pre><code>interface Tunnel100\n    ip nhrp redirect\n</code></pre></p> <p>Spoke configuration changes (from Phase 2): <pre><code>interface Tunnel100\n    ip nhrp shortcut\n</code></pre></p> <p>Summarize routes on hub:</p> <ul> <li>Uses NHRP table to resolve more specific (spoke-to-spoke) routes</li> <li>First packet traverses hub, hub notifies sender using traffic indication to notify sender of existance of better path - which triggers ender to start a resolution request <pre><code>interface Tunnel100\n    ip summary-address eigrp 100 0.0.0.0 0.0.0.0\n</code></pre></li> </ul>"},{"location":"studies/ccie-ei/dmvpn/#operation","title":"Operation","text":""},{"location":"studies/ccie-ei/dmvpn/#control-and-data-plane","title":"Control and Data Plane","text":"<ul> <li>Control plane is always hub and spoke</li> <li>Data plane depends on 'phase'</li> </ul>"},{"location":"studies/ccie-ei/dmvpn/#split-horizon","title":"Split horizon","text":"<ul> <li>Enabled by default</li> <li>Router sends updates back out same interface with unreachable metric</li> <li>Disable as part of hub config <code>no ip split-horizon eigrp &lt;pid&gt;</code></li> </ul>"},{"location":"studies/ccie-ei/dmvpn/#dmvpn-messages","title":"DMVPN Messages","text":""},{"location":"studies/ccie-ei/dmvpn/#register-requests","title":"Register Requests","text":"<ul> <li>Notify NHRP server of tunnel.ip:nbma.ip mapping</li> </ul> <p>Packet:</p> <ul> <li>ENET header - protocol = IP (0x0800)</li> <li>IP header - ip.src = , ip.dst = , protocol = GRE (47) <li>GRE header - protocol = NHRP (0x2001)</li> <li>NHRP header<ul> <li>Fixed header - Protocol-type = IPv4, Version = 1 (RFC2332), Hop-count, Packet-type= Reg_Req</li> <li>Mandatory part - src NBMA = , src Protocol = , dst Protocol =  <li>Flag Uniqueness bit = true || false if we are DHCP client</li>"},{"location":"studies/ccie-ei/dmvpn/#register-replies","title":"Register Replies","text":"<ul> <li>Notify NHRP client of successfuly registration request</li> </ul> <p>Packet:</p> <ul> <li>ENET header - protocol = IP (0x0800)</li> <li>IP header - ip.src = , ip.dst = , protocol = GRE (47) <li>GRE header - protocol = NHRP (0x2001)</li> <li>NHRP header<ul> <li>Fixed header - Protocol-type = IPv4, Version = 1 (RFC2332), Hop-count, Packet-type= Reg_Reply</li> <li>Mandatory part - src NBMA = , src Protocol = , dst Protocol ="},{"location":"studies/ccie-ei/dmvpn/#resolution-requests","title":"Resolution Requests","text":"<ul> <li>Ask NHRP server for NBMA IP for a specified tunnel IP</li> <li>NHRP server forwards request to destination spoke does not respond itsself</li> <li>Resolution request contains requestors NBMA IP and Tunnel IP</li> </ul> <p>Packet:</p> <ul> <li>ENET header - protocol = IP (0x0800)</li> <li>IP header - ip.src = , ip.dst = , protocol = GRE (47) <li>GRE header - protocol = NHRP (0x2001)</li> <li>NHRP header<ul> <li>Fixed header - Protocol-type = IPv4, Version = 1 (RFC2332), Hop-count, Packet-type = Res_Req</li> <li>Mandatory part - src NBMA = , src Protocol = , dst Protocol ="},{"location":"studies/ccie-ei/dmvpn/#resolution-replies","title":"Resolution Replies","text":"<ul> <li>Destination spoke populates it's NHRP table, then replies directly to requestor</li> </ul> <p>Packet:</p> <ul> <li>ENET header - protocol = IP (0x0800)</li> <li>IP header - ip.src = , ip.dst = , protocol = GRE (47) <li>GRE header - protocol = NHRP (0x2001)</li> <li>NHRP header<ul> <li>Fixed header - Protocol-type = IPv4, Version = 1 (RFC2332), Hop-count, Packet-type = Res_Reply</li> <li>Mandatory part - src NBMA = , src Protocol = , dst Protocol =  same as initial request <li>Client info entry - Client NBMA = , Client Protocol ="},{"location":"studies/ccie-ei/dmvpn/#traffic-indication","title":"Traffic Indication","text":"<ul> <li>Hub notifies spoke that there is a better path</li> <li>This triggers spoke to send a resolution request, then remote spoke provides the path to spoke</li> </ul> <p>Packet:</p> <ul> <li>...</li> <li>NHRP header<ul> <li>Fixed header</li> <li>Mandatory part</li> <li>Traffic indication - src NBMA , src Protocol , dst Protocol  <li>Packet causing indication - IPv4, ICMP, src: , dst:"},{"location":"studies/ccie-ei/dmvpn/#dmvpn-labs","title":"DMVPN Labs","text":"<ul> <li>Interesting Traffic</li> <li>Per Tunnel QoS</li> <li>DMVPN Clustering</li> <li>DHCP and DMVPN</li> </ul> <p>Configure these before next class</p>"},{"location":"studies/ccie-ei/eigrp/","title":"EIGRP","text":""},{"location":"studies/ccie-ei/eigrp/#rd-cd-s-fc-fs-fd-da1","title":"RD, CD, S, FC, FS, FD (DA#1)","text":"<ul> <li>Reported Distance (aka advertised distance) A router's best path, which it will advertise to other neighbors</li> <li>Compouted Distance My distance through neighbor(s) to a network</li> <li>Successor The lowest CD path routing table</li> <li>Feasibility Condition A routers reported distance must be lower than my best path to be considered</li> <li>Feasible successor Any other paths that meet the feasibility condition, topology table</li> <li>Feasible distance Initially equal to distance of successor - lowest value in history of link, used for loop avoidance. Can cause DUAL algorithm to run again, vs trying to converge on a looped path</li> </ul> <p>EIGPR classic metric calulation Delay + Bandwidth * 256</p> <p>via  (CD / RD),  <p>Show S and FS <pre><code>R1#show ip eigrp topology | beg 10.1.1.0\nP 10.1.1.0/24, 1 successors, FD is 2560\n        via 12.1.1.2 (2560/256), GigabitEthernet0/2\n        via 13.1.1.3 (5120/1280), GigabitEthernet0/3\n</code></pre></p> <p>Show all routes, even those that do not meet the FC <pre><code>R1#show ip eigrp topology all-links | beg 10.1.1.0\nP 10.1.1.0/24, 1 successors, FD is 2560, serno 4\n        via 12.1.1.2 (2560/256), GigabitEthernet0/2\n        via 14.1.1.4 (4096/3072), GigabitEthernet0/4 ! Not shown becasue RD &gt; CD of best path\n        via 13.1.1.3 (5120/1280), GigabitEthernet0/3\n</code></pre></p>"},{"location":"studies/ccie-ei/eigrp/#finding-asn-da2","title":"Finding ASN (DA#2)","text":"<p>Neighbor Adj doesn't come up? Either ASN mismatch, or neighbor is unicasting and I am multicasting 1. Try a <code>neighbor</code> command to unicast 2. Try to find ASN using debug command</p> <pre><code>access-list 100 per eigrp host &lt;neighbor-ip&gt; host 224.0.0.10\ndebug ip packet detail 100 dump\n\n*Nov 19 18:04:06.744: IP: s=56.1.1.5 (GigabitEthernet0/5), d=224.0.0.10, len 60, rcvd 0, proto=88\n08E1D1C0:                       0100 5E00000A            ..^...\n08E1D1D0: 50000001 00060800 45C0003C 00720000  P.......E@.&lt;.r..\n08E1D1E0: 01589F28 38010105 E000000A 0205E66E  .X.(8...`.....fn\n08E1D1F0: 00000000 00000000 00000000 00000064  ...............d\n08E1D200: 0001000C 01000000 0000000F 00040008  ................\n08E1D210: 14000200\n\nundebug all\n</code></pre>"},{"location":"studies/ccie-ei/eigrp/#find-asn","title":"Find ASN","text":"<ol> <li>Look for E000000A, this is 224.0.0.10 in hex</li> <li>Go 5 blocks after that block 00000064 this is ASN in hex</li> <li>64 hex to decimal = 100</li> <li>ASN is 100</li> </ol>"},{"location":"studies/ccie-ei/eigrp/#find-k-values","title":"Find K values","text":"<ol> <li>Look at 7th block 01000000, and first two digits in 8th block 00</li> <li>K1 = 01, K2 = 00, K3 = 00, K4 = 00, K5 = 00</li> </ol> <p><code>metric weight 0 1 0 0 0 0</code> (ToS, K1, K2, K3, K4, K5)</p>"},{"location":"studies/ccie-ei/eigrp/#summarization-da3","title":"Summarization (DA#3)","text":"<p>Unsummarized routes with different delays <pre><code>R2#show ip route eigrp | beg Ga\nGateway of last resort is not set\n\n      1.0.0.0/24 is subnetted, 4 subnets\nD        1.1.0.0 [90/3072] via 12.1.1.1, 00:01:38, GigabitEthernet0/1\nD        1.1.1.0 [90/28416] via 12.1.1.1, 00:01:38, GigabitEthernet0/1\nD        1.1.2.0 [90/54016] via 12.1.1.1, 00:01:38, GigabitEthernet0/1\nD        1.1.3.0 [90/79616] via 12.1.1.1, 00:01:38, GigabitEthernet0/1\n</code></pre></p> <p>After summarization <pre><code>R2#show ip route eigrp | beg Ga\nGateway of last resort is not set\n\n      1.0.0.0/22 is subnetted, 1 subnets\nD        1.1.0.0 [90/3072] via 12.1.1.1, 00:00:07, GigabitEthernet0/1\n</code></pre></p> <p>Note cost of a summary is based on the lowest cost of a specific route within the summary.</p>"},{"location":"studies/ccie-ei/eigrp/#leaking-routes","title":"Leaking routes","text":"<ul> <li>Just use a more specific <code>ip summary-address</code></li> <li>Use a leak map  <pre><code>ip summary-address eigrp 100 &lt;subnet&gt; &lt;mask&gt; leak-map &lt;route-map-name&gt;\n\nroute-map tst permit 10\n match ip address 1\n\naccess-list 1 permit &lt;subnet&gt; &lt;inverse-mask&gt;\n</code></pre></li> <li>Leak map refs non-existant route-map? Only summary advertised</li> <li>Leak map refs route-map that doesn't have an ACL? Summary + specific routes advertised</li> <li>Leak map refs route-map that refs ACL that doesn't exist? Summary + specific routes advertised</li> </ul>"},{"location":"studies/ccie-ei/eigrp/#default-routes","title":"Default Routes","text":"<p>Options for injecting default route in EIGRP?</p> <ol> <li>(best?) <code>ip summary-address eigrp &lt;asn&gt; 0.0.0.0 0.0.0.0</code><ul> <li>Allows 'per neighbor' default route injection</li> <li>Will surpress all specific routes</li> </ul> </li> <li><code>ip route 0.0.0.0 0.0.0.0 Null0</code>, then <code>network 0.0.0.0</code> in EIGRP<ul> <li>Works because Null0 becomes a directly connected interface in routing table</li> <li>Will not suppress other specific routes</li> </ul> </li> <li><code>ip route 0.0.0.0 0.0.0.0 &lt;next-hop&gt;</code>, then <code>redistribute static</code> in EIGRP<ul> <li>Will not suppress other specific routes</li> <li>Default route will have AD of 170, external route</li> </ul> </li> <li><code>ip default-network &lt;network&gt;</code>, then <code>redistribute static</code> in EIGRP<ul> <li>If subnetted IP is used, static route for network will be injected</li> <li>Cisco says being removed soon (classfull command)</li> </ul> </li> </ol>"},{"location":"studies/ccie-ei/eigrp/#authentication","title":"Authentication","text":"<ol> <li>Classic Mode - supports MD5<ul> <li>Keychain based authentication</li> </ul> </li> </ol> <pre><code>key chain &lt;keychain-name&gt;\n key 1\n  key-string &lt;password&gt;\n\ninterface &lt;intf&gt;\n ip authentication key-chain eigrp &lt;asn&gt; tst\n ip authentication mode eigrp &lt;asn&gt; md5\n</code></pre> <p>See password in double quotes <code>show key-chain &lt;keychain-name&gt;</code></p> <ol> <li>Named Mode - supports MD5 or SHA-256</li> </ol> <p>MD5 <pre><code>key chain &lt;keychain-name&gt;\n key 1\n  key-string &lt;password&gt;\n\nrouter eigrp &lt;name&gt;\n address-family ipv4 as &lt;asn&gt;\n  af-interface &lt;intf | default&gt;\n   authentication mode md5\n   authentication key-chain &lt;keychain-name&gt;\n</code></pre></p> <p>SHA-256 does not use key chain <pre><code>router eigrp &lt;name&gt;\n address-family ipv4 as &lt;asn&gt;\n  af-interface &lt;intf | default&gt;\n   authentication mode hmac-sha-256 &lt;password&gt;\n</code></pre></p>"},{"location":"studies/ccie-ei/eigrp/#metric-calculation-da4","title":"Metric Calculation (DA#4)","text":"<ul> <li>Before composite metric is calculated, vector metric is calulated<ul> <li>Vector metric \"worst case scenerio\"<ul> <li>Advertised to neighbors</li> <li>Bandwidth = worst bandwidth along the path</li> <li>Delay = sum of delay along the path</li> </ul> </li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/eigrp/#k-values","title":"K values","text":"<p>Default, K1 and K3 = 1, others = 0 - K1 = bandwidth - K2 = load - K3 = delay - K4 = reliability - K5 = MTU</p>"},{"location":"studies/ccie-ei/eigrp/#classic-mode-metric-calculation","title":"Classic Mode metric calculation","text":"<p>[(K1 x BW) + (K2 x BW 256-load) + (K3 x DLY)] x [K5/K4 + reliability] x 256</p> <p>Bandwidth = Slowest BW / 10,000,000 Delay = Sum of Delays / 10</p> <p>So by default: (BW + DLY) x 256</p>"},{"location":"studies/ccie-ei/eigrp/#named-mode-metric-calculation","title":"Named Mode metric calculation","text":"<ul> <li>When is wide metric in use?</li> </ul> <p>EIGRP version 9 or above</p> <pre><code>show eigrp tech-support\neigrp-release      :  20.00.00 : Portable EIGRP Release  \n</code></pre> <p>Metric version 64bit = wide metric</p> <pre><code>R8#show eigrp protocols | inc rib-scale|version\nMetric rib-scale 128\nMetric version 64bit\n</code></pre> <ul> <li>Composite metric - 64 bits long</li> <li>Rib-scale - routing table can only hold 32 bit number, so metric gets divided by rib-scale <ul> <li>Need to change on all routers on same AS If you don't, it won't cause loop, but will cause suboptimal routing</li> </ul> </li> </ul> <p>FD is 13189120, RIB is 103040 13189120 / rib-scale (128) = 103040</p> <pre><code>R7#show ip ei topology 8.8.8.0/24\n...\nState is Passive, Query origin flag is 1, 1 Successor(s), FD is 13189120, RIB is 103040\nDescriptor Blocks:\n78.1.1.8 (GigabitEthernet0/8), from 78.1.1.8, Send flag is 0x0\n    Composite metric is (13189120/163840), route is Internal\n    Vector metric:\n        Minimum bandwidth is 100000 Kbit\n        Total delay is 101250000 picoseconds\n        ...\n</code></pre> <pre><code>Nonchangable values from EIGRP spec\n- EIGRP_BW = 10,000,000 (10 million)\n- EIGRP_DLY = 1,000,000 (1 million)\n- Multiplier = 65536\n\nMetric calculation\n- wide metric = throughput + latency\n    - throughput = (EIGRP_BW x Multiplier) / Minimum bandwidth\n    - latency = (Total delay x Multiplier) / EIGRP_DLY\n</code></pre>"},{"location":"studies/ccie-ei/eigrp/#advanced-tagging-da5","title":"Advanced Tagging (DA#5)","text":"<p>Using dotted decimal notation with tagging</p> <p><code>(config)#route-tag notation dotted-decimal</code></p> <p>Filter for odd tagged routes using DDN route tags <pre><code>route-tag list RT seq 5 permit 0.0.0.1 0.0.0.254\n\nroute-map tst permit 10\n match tag list RT\n\nrouter eigrp &lt;name&gt;\n !\n address-family ipv4 unicast autonomous-system &lt;asn&gt;\n  !\n  topology base\n   distribute-list route-map tst in\n</code></pre></p>"},{"location":"studies/ccie-ei/eigrp/#filter-for-an-odd-number-on-4th-octet-in-an-acl","title":"Filter for an odd number on 4th octet in an ACL","text":"<p>This demonstrates same thing using an ACL that you can do with route tag.</p> <pre><code>`access-list 1 permit 1.1.1.1 0.0.0.254`\n- Matches 1.1.1.1/32, 1.1.1.3/32, etc.\n- Works due to \"AND-ing\" process (binary)\n</code></pre> <p>1.1.1.1/32 match <pre><code>Last octet .1 = 0000 0001\nWildcard .254 = 0000 0001\nAND             _________\n                0000 0001\n</code></pre></p> <p>1.1.1.1/32 no match <pre><code>Last octet .2 = 0000 0010\nWildcard .254 = 0000 0001\nAND             _________\n                0000 0000\n</code></pre></p> <p>1.1.1.5/32 match <pre><code>Last octet .5 = 0000 0101\nWildcard .254 = 0000 0001\nAND             _________\n                0000 0001\n</code></pre></p>"},{"location":"studies/ccie-ei/eigrp/#stub-routing","title":"Stub Routing","text":"<ul> <li>When a path is lost, EIGRP takes active role to find new path.</li> <li>EIGRP sends QUERY to ask neighbors.<ul> <li>QUERY gets propogated downstream until someone answers</li> <li>Neighbors must respond within 3 mins<ul> <li>No response? Path is SIA (stuck in active) until reply recieved</li> </ul> </li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/eigrp/#stub-router","title":"Stub router","text":"<ul> <li>Sets stub flag, QUERY is never sent to stub router</li> </ul> <p>Only advertise a specific type of routes <pre><code>router eigrp &lt;asn&gt;\n eigrp stub (connected | summary | static | redistributed | receive-only)\n</code></pre></p> <p>Leak some routes through a stub? <pre><code>router eigrp &lt;asn&gt;\n eigrp stub connected summary leak-map &lt;map&gt;\n</code></pre></p> <p>Leak specific routes to specific neighbors? <pre><code>route-map &lt;tst&gt; permit 10\n match ip address 2\n match interface Gi0/2\nroute-map &lt;tst&gt; permit 20\n match ip address 3\n match interface Gi0/3\nroute-map &lt;tst&gt; permit 90\n</code></pre></p>"},{"location":"studies/ccie-ei/eigrp/#add_path-da6","title":"ADD_PATH (DA#6)","text":"<p>Can advertise multiple paths to the same network, so that there is no wait for convergence.</p> <pre><code>router eigrp &lt;name&gt;\n address-family ipv4 as &lt;asn&gt;\n  af-interface &lt;intf&gt;\n   add-paths 2\n</code></pre>"},{"location":"studies/ccie-ei/eigrp/#frr-lfa-da7","title":"FRR LFA (DA#7)","text":"<p>\"BFD on Demand\"</p> <ul> <li>Requires named mode</li> <li>Creates a BFD session</li> </ul> <p>Configuration: <pre><code>router eigrp &lt;name&gt;\n address-family ipv4 as &lt;asn&gt;\n topology base\n  fast-reroute ...\n</code></pre></p> <p>FRR options: <pre><code>R9(config-router-af-topology)#fast-reroute ?\n  load-sharing  Distributes repair paths equally among links and prefixes\n  per-prefix    Enable Fast-Reroute Per-Prefix\n  tie-break     Set repair path preference\n</code></pre></p> <p>When using per-prefix: <pre><code>R9#show ip route 11.1.1.1 | inc Repair\n      Repair Path: 10.9.12.12, via GigabitEthernet12\n\nR9#show ip cef 11.1.1.1\n11.1.1.1/32\n  nexthop 10.9.10.10 GigabitEthernet10\n    repair: attached-nexthop 10.9.12.12 GigabitEthernet12\n</code></pre></p> <ul> <li>per-prefix calculate repair path on a per prefix basis</li> <li>load-sharing treat the paths as equal</li> <li>tie-break example: interface-disjoint, chose a repair path on a different interface for redundancy purposes</li> </ul> <pre><code>R9(config-router-af-topology)#fast-reroute tie-break ?\n  interface-disjoint         Prefer Interface disjoint repair path\n  linecard-disjoint          Prefer line card disjoint repair path\n  lowest-backup-path-metric  Prefer repair path with lowest total metric\n  srlg-disjoint              Prefer SRLG disjoint repair path\n</code></pre> <p>Order of priority to select repair path SRLG (prio 10), Interface (prio 20), Lowest metric (prio 30), line card (prio 40)</p> <p>SRLG - Shared risk link group <pre><code>interface &lt;intf&gt;\n srlg gid &lt;gid&gt;\n</code></pre></p>"},{"location":"studies/ccie-ei/eigrp/#eigrp-filtering-da-10","title":"EIGRP Filtering (DA #10)","text":"<p>Filter using maximum-hops <pre><code>router eigrp &lt;asn&gt;\n metric maximum-hops &lt;max-hops&gt;\n</code></pre></p> <p>Filter by setting AD <pre><code>! Identify network\naccess-list 1 permit 2.0.0.0 0.255.255.255\n\n! Set admin distance to 255 when advertised by router 100.1.1.3\nrouter eigrp 100\n distance 255 &lt;neighbor-ip&gt; &lt;neigh-wildcard&gt; &lt;acl&gt;\n ! distance 255 100.1.1.3 0.0.0.0 1\n</code></pre></p> <p>Using distribute-list <pre><code>! Identify network\naccess-list 1 deny 4.0.0.0 0.255.255.255\naccess-list 1 permit any\n\nrouter eigrp 100\n distribute-list 1 in Gi0/2\n ! distribute-list &lt;acl&gt; &lt;direction&gt; &lt;intf&gt;\n</code></pre></p> <p>Using extended ACL <pre><code>! 100.1.1.2 = Advertising router\n! 3.0.0.0/8 = Network to be filtered\naccess-list 100 deny ip host 100.1.1.2 3.0.0.0 0.255.255.255\naccess-list 100 per ip any any\n\nrouter eigrp 100\n distribute-list 100 in Gi0/0\n</code></pre></p> <p>Filter by metric range Example - filter metrics between 7936-10496</p> <p>Calculate a deviation 7936 + 10496 = 18432 / 2 = 9216 (middle of range) 10496 - 7936 = 2560 / 2 = 1280 (deviation from middle of range)</p> <p>Route map says \"If route metric is within range of 9216 +- 1280, deny\" <pre><code>route-map tst deny 10\n match metric 9216 +- 1280\nroute-map tst permit 20\n\nrouter eigrp 100\n distribute-list route-map tst in \n</code></pre></p> <p>Filter by internal/external route ``` router eigrp 100  distance eigrp 90 255  ! distance eigrp"},{"location":"studies/ccie-ei/mpls/","title":"MPLS","text":"<ul> <li>What/Why: Multiprotocol<ul> <li>IP/Eth/ATM/FR</li> </ul> </li> <li>How: Label Switching</li> </ul>"},{"location":"studies/ccie-ei/mpls/#data-plane-dp","title":"Data Plane (DP)","text":"<ul> <li>Data plane remains mostly unchanged over time; defined in RFC3031, RFC3032</li> <li>No concept of src/dst address - replaced by MPLS label (routers generally only look at dst address anyway)</li> <li><code>MPLS Label</code>: Instruction for packet treatment<ul> <li>Instructions are not carried in the packet, instead programmed in device (control plane)</li> </ul> </li> <li><code>Lookup</code>: Router process to locate the instructions for a labeled packet in the control plane</li> </ul>"},{"location":"studies/ccie-ei/mpls/#mpls-label","title":"MPLS Label","text":"<ul> <li>Defined in RFC3032</li> <li>Stored in TCAM</li> <li>MPLS header comes after L2 header (always encapsulated within L2), can encapsulate L3 (IP) or L2 (Eth)<ul> <li>Sometimes called \"L2.5\", \"L2+\" maybe more accurate</li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/mpls/#fields","title":"Fields","text":"<ul> <li>Label: Label Value, 20 bits<ul> <li>Lowest: 0, Highest: 2^20 (1,048,575)</li> </ul> </li> <li>Exp: Experimental Use, 3 bits [used for QoS, CoS bits; RFC5462: Traffic Class]</li> <li>S: Bottom of Stack, 1 bit<ul> <li>Indicates that the following header is either MPLS (0) or non-MPLS (1) (when multiple MPLS headers are 'stacked')</li> </ul> </li> <li>TTL: Time to Live, 8 bits</li> </ul>"},{"location":"studies/ccie-ei/mpls/#label-opacity","title":"Label Opacity","text":"<p>When a router recieves an MPLS packet (has MPLS header), it uses the first header to determine the forwarding instructions. Any further MPLS headers are ignored (hidden)</p>"},{"location":"studies/ccie-ei/mpls/#instructions","title":"Instructions","text":"<ul> <li>Stored in MPLS LBL FIB<ul> <li>MPLS LBL FIB conains <code>MPLS Label Value</code> -&gt; <code>Exit Ifc, Next Hop Addr, MPLS Actions/Operation</code></li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/mpls/#mpls-actions","title":"MPLS Actions","text":"<code>Add the label (Push)</code> Adds a label to the top of the stack of labels, increasing stack depth <code>Replace the label (Swap)</code> Swaps the label at the top of the stack to a new label, stack depth remains the same <code>Remove the label (Pop)</code> Removes the label at the top of the stack, stack depth decreases"},{"location":"studies/ccie-ei/mpls/#reserved-labels","title":"Reserved Labels","text":"<ul> <li><code>0</code>: IPv4 Explicit Null (aka, \"pop the label\" Pop + perform an IPv4 lookup)</li> <li><code>1</code>: Router Alert</li> <li><code>2</code>: IPv6 Explicit Null</li> <li><code>3</code>: Implicit Null (aka, \"pop the label\")</li> <li><code>4-6</code>: Unassigned</li> <li><code>7</code>: Entropy Label Indicator (ELI)</li> <li><code>8-12</code>: Unassigned</li> <li><code>13</code>: Generic Associated Channel</li> <li><code>14</code>: OAM Alert</li> <li><code>15</code>: Extension Label (XL)</li> </ul>"},{"location":"studies/ccie-ei/mpls/#packet-forwarding","title":"Packet Forwarding","text":"<code>Limited IP Core</code> MPLS network does not know IP routes for packets it is forwarding"},{"location":"studies/ccie-ei/mpls/#tables","title":"Tables","text":"<p>IP FIB (w/o MPLS)     - Contents: IP Subnets     - Key: IP Addresses     - Results: Exit Ifc, Next Hop Info (Adj table)</p> <p>IP FIB (w/ MPLS)     - Contents: (same)     - Key: (same)     - Results: Exit Ifc, Next Hop Info (Adj table), Optional: MPLS Action</p> <p>MPLS Label FIB     - Contents: MPLS Labels     - Key: MPLS Label     - Results: Exit Ifc, Next Hop Info (Adj table), MPLS Actions</p>"},{"location":"studies/ccie-ei/mpls/#control-plane-cp","title":"Control Plane (CP)","text":"<ul> <li><code>TDP</code>: Prestandard version of LDP (Cisco specific)</li> <li><code>LDP</code>: Dynamic protocol to distribute MPLS paths; this tech is on it's way out</li> <li><code>RSVP</code>: </li> <li><code>BGP-LU</code>:</li> <li><code>SR</code>: Segment routing; latest and greatest MPLS control plane</li> </ul>"},{"location":"studies/ccie-ei/mpls/#static-label-switched-paths-lsp","title":"Static Label Switched Paths (LSP)","text":"<ul> <li>Take a destination IP (FIB entry) and bind an MPLS label</li> </ul> <p>Create static MPLS action</p> <p>\"Binding\": Bind an IP CEF entry to an MPLS action <pre><code>mpls static binding ipv4 &lt;dest-prefix&gt; &lt;dest-mask&gt; &lt;input|output&gt; &lt;dest-nexthop&gt; &lt;label-id&gt;\n</code></pre></p> <p>Create a static MPLS label <pre><code>mpls static labelswitch &lt;incoming-label-id&gt;\n  moi out-interface &lt;output-intf&gt; ipv4 &lt;nexthop-ip&gt; &lt;outgoing-label-id&gt;\n</code></pre></p>"},{"location":"studies/ccie-ei/mpls/#bgp-free-core","title":"BGP-Free Core","text":"<ul> <li>Only edge routers run BGP, core is MPLS packets destined between edge routers</li> </ul>"},{"location":"studies/ccie-ei/mpls/#label-distribution-protocol-ldp","title":"Label Distribution Protocol (LDP)","text":"<ol> <li> <p>Autodiscovery</p> <ul> <li><code>HELLO</code> packets<ul> <li>Dest IP (Multicast): 224.0.0.2 (AllRouters)</li> <li>Uses UDP (Src/Dst Port: 646)</li> <li>Neighbor advertises unicast IP (XPort IP, usually same as LSR-ID - must be routable) for creation of neighbor-&gt;neighbor TCP session</li> </ul> </li> <li>LDP-ID (LSR-ID: LABELSPACE)<ul> <li>Highest Loopback = LSR-ID</li> <li>Ethernet: LABELSPACE = 0 (per platform, not per interface)</li> </ul> </li> </ul> </li> <li> <p>Session (neighborship) creation</p> <ul> <li>Created using XPort IP (Dst IP)</li> <li>TCP session (Dst Port: 646, Src Port: ephermal) (client/server)</li> <li>Two types of messages<ol> <li><code>Label Mapping MSG</code><ul> <li>Advertises local bindings (IPv4 Addr + MPLS Label)</li> </ul> </li> <li><code>Address MSG</code><ul> <li>??</li> </ul> </li> </ol> </li> </ul> </li> <li> <p>Independent LSP Control (generate labels for everything) [Cisco]</p> </li> <li>Ordered LSP Control (generate binding for local routes and any bindings that were recieved from other rtrs)</li> </ol>"},{"location":"studies/ccie-ei/mpls/#ldp-configuration","title":"LDP Configuration","text":"<ul> <li>LDP starts when <code>mpls ip</code> is enabled on an intf</li> </ul> <p>See bindings: <code>show mpls ldp bindings</code></p> <p>See autodiscovery: <code>show mpls ldp discovery [detail]</code></p> <p>Set MPLS LDP transfer address <code>(config-if) mpls ldp discovery transport-address [ip|interface]</code></p>"},{"location":"studies/ccie-ei/mpls/#mpls-configuration","title":"MPLS Configuration","text":"<p>See all MPLS intfs <pre><code>show ip mpls interfaces\n</code></pre></p> <p>Show MPLS LFIB <pre><code>show mpls forwarding-table\n</code></pre></p> <p>Enable MPLS on intf <pre><code>interface &lt;intf&gt;\n  mpls ip\n</code></pre></p>"},{"location":"studies/ccie-ei/mpls/#mpls-l3vpn","title":"MPLS L3VPN","text":"<ul> <li>SP provdes \"router as a service\"<ul> <li>Customer advertises routes to SP router, which advertises other customer routes</li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/mpls/#goals","title":"Goals","text":"<ul> <li>Separation between Customer (C) routes</li> <li>No C-routes in the core (P routers)</li> <li>C-routes separated at PE routers<ul> <li>Each customer space assigned unique identifier<ul> <li>No longer IPv4 routes, now L3VPN routes (and BGP AF)</li> </ul> </li> </ul> </li> <li>BGP to distribute routes between PE's</li> </ul>"},{"location":"studies/ccie-ei/mpls/#separation-of-c-routes","title":"Separation of C-Routes","text":"<ul> <li>Utilizes \"route distinguisher\" attached to each IPv4 route<ul> <li>64-bits<ul> <li>NN = unique number</li> <li>AS:NN</li> <li>IPv4:NN</li> <li>4BAS:NN</li> </ul> </li> <li>Becomes part of the route (NLRI) within BGP, so it would be unique even if IPv4 is same</li> </ul> </li> <li>New BGP address family<ul> <li>RD:IPv4 (64 bits + 32 bits = 96 bits)<ul> <li>Example: ASN:NN:IPV4ROUTE<ul> <li>10:1:10.1.1.1</li> </ul> </li> </ul> </li> <li>New address family called <code>VPN-IPv4</code> (or <code>VPN-IPv6</code>)<ul> <li>Cisco: <code>VPNv4</code></li> <li>Juniper: <code>INET-VPN</code></li> </ul> </li> </ul> </li> <li>PE: Advertises C-Routes as VPNv4<ul> <li>VRF (on PE router) becomes associated with a VPNv4 RD</li> <li>virtual router (on local router) + RD = VRF</li> <li>VRF:RD is 1:1 relationship</li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/mpls/#policy-administration","title":"Policy Administration","text":"<ul> <li>Uses tags, not RD - because single tag is insufficient for complex policy</li> <li>Originating PE: attaches tags per export policy</li> <li>Receiving PE: inspects and imports tags per import policy</li> <li>BGP doesn't have tags, instead has attributes<ul> <li>Extended-Communities (64 bits)<ul> <li>Route-Target: used for tagging purposes<ul> <li>AS:NN</li> <li>IPv4:NN</li> </ul> </li> <li>RD (part of VPNv4 route/NLRI) is not same as RT (BGP extended community)</li> </ul> </li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/mpls/#vpnv4-configuration","title":"VPNv4 configuration","text":"<ul> <li>iBGP between PE's, MPLS+LDP+OSPF across core</li> </ul> <p>PE configuration <pre><code>! Create VR for routes\nvrf definiation VRF_BLUE\n rd 10:101 ! &lt;asn:unique&gt;\n route-target import 102:102 ! &lt;&gt;\n route-target export 101:101\n address-family ipv4 unicast\n exit\n\n! Add customer facing interface to VR\ninterface &lt;intf&gt;\n vrf forwarding VRF_BLUE\n\n! Move Cust-&gt;SP eBGP to VR\nrouter bgp &lt;asn&gt;\n address-family ipv4 unicast vrf VRF_BLUE\n  neighbor &lt;cust-ip&gt; remote-as &lt;cust-as&gt;\n\n! Exchange VPNv4 routes\nrouter bgp &lt;asn&gt;\n address-family vpnv4 unicast\n  neighbor &lt;peer-pe-ip&gt; activate\n</code></pre></p> <p>! See routes inside of VRF <code>show bgp vpnv4 unicast &lt;rd|vrf&gt; &lt;vrf-name&gt;</code></p> <p>How does receiving PE know which VRF data plane traffic is placed in? Stacked MPLS labels - the VPNv4 path gets an \"inner\" label</p>"},{"location":"studies/ccie-ei/multicast/","title":"Multicast","text":""},{"location":"studies/ccie-ei/multicast/#overview","title":"Overview","text":""},{"location":"studies/ccie-ei/multicast/#what-is-multicast","title":"What is Multicast?","text":"<ul> <li>One source, multiple receivers</li> <li>Different from broadcast: multicast only recieves packets if receiver asks for them</li> <li>Best utilization of resources because data is only transmitted through the network where it is needed</li> </ul>"},{"location":"studies/ccie-ei/multicast/#multicast-alternatives","title":"Multicast alternatives","text":""},{"location":"studies/ccie-ei/multicast/#replicated-unitcast","title":"Replicated Unitcast","text":"<p>Source sends a unicast stream to each client. Bad because of multiple similar streams from source</p> <p>Downside: source can become overwhelemed, inefficient bandwidth usage</p>"},{"location":"studies/ccie-ei/multicast/#directed-broadcast","title":"Directed Broadcast","text":"<p>Broadcast to a particular subnet (i.e. 172.16.1.255), and is routable. Standard broadcast (255.255.255.255) is non-routable.</p> Enable/disable directed broadcast<pre><code>interface &lt;intf-name&gt;\n no ip directed-broadcast\n</code></pre> <p>Downside: recievers that don't want/need the data still have to listen and choose to ignore</p>"},{"location":"studies/ccie-ei/multicast/#layer-3-multicast","title":"Layer 3 Multicast","text":"<ul> <li>Src IP: still unicast</li> <li>Dst IP: multicast group<ul> <li>Class D IP</li> <li>224.0.0.0 - 239.255.255.255 (IPs beginning with <code>1110</code>)</li> <li>Class D is flat, no subnetting</li> </ul> </li> <li>Some ranges for specific purposes<ul> <li>224.0.0.0/24 - local network control block (routing protocols)<ul> <li>TTL of 1 or 2</li> </ul> </li> <li>232.0.0.0/8 - source-specific multicast block, streams with known sources</li> <li>239.0.0.0/8 - organization-local scope, comparible to RFC1918, use within an AS</li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/multicast/#layer-2-multicast","title":"Layer 2 Multicast","text":"<ul> <li>Dst MAC: can't use ARP to determine<ul> <li>Sender/receiver should agree on a single destination MAC</li> <li>Receivers accept frames with the dest MAC</li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/multicast/#mapping-l3-to-l2","title":"Mapping L3 to L2","text":"<p>Mapping procedure generates a well-known multicast MAC from a multicast IP</p> <ul> <li>Uses MAC OUI <code>01:00:5E</code> (first 3 bytes)<ul> <li><code>01</code> <ul> <li>First bit <code>0</code> means assigned by IEEE, <code>1</code> means made up</li> <li>Second bit <code>1</code> means broadcast/multicast, <code>0</code> means unicast</li> </ul> </li> </ul> </li> <li>Remaining 24 bits (3 bytes)<ul> <li>bit #1 = <code>0</code> for multicast</li> <li>bits #2-24 = 23 bits for mapping IP to MAC<ul> <li>This causes ambiguity because not enough bits to represent all IPs<ul> <li>If two multicast L3 IPs are used that share the same MAC, the end hosts will still receive the frame, review the L3 IP, and process OR drop</li> </ul> </li> <li>Lower 23 IP address bits map to these 23 bits</li> <li>32 (2^5) IP addresses all map to same MAC<ul> <li>ex: 230.1.2.3, 230.129.2.3, 239.1.2.3 map to <code>01:00:5E:01:02:03</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/multicast/#multicast-routers","title":"Multicast Routers","text":"<ul> <li>Guide packets away from a source, not towards a destination.</li> <li>Track upstream interfaces (closest to source), and destination interfaces (with interested receivers)</li> </ul>"},{"location":"studies/ccie-ei/multicast/#multicast-routes","title":"Multicast Routes","text":"<ul> <li>Tracks multicast groups and sources</li> </ul> <code>(Src,Group) or (S,G)</code> Forwarding state with specific source. \"Sorce specific multicast\" <code>(*,Group) or (*,G)</code> Forwarding state with any/unknown source. \"Any source multicast\" Example mroute<pre><code># show ip mroute 239.255.255.253\n(*, 239.255.255.253), 4w1d/00:03:26, RP 10.250.0.115, flags: SJC\n  Incoming interface: Null, RPF nbr 0.0.0.0\n  Outgoing interface list:\n    TenGigabitEthernet1/1/8, Forward/Sparse, 2w0d/00:03:26\n    Vlan200, Forward/Sparse-Dense, 2w6d/00:02:22\n    TenGigabitEthernet2/1/8, Forward/Sparse, 4w1d/00:03:22\n\n(10.250.32.230, 239.255.255.253), 00:00:07/00:02:52, flags: \n  Incoming interface: TenGigabitEthernet2/1/8, RPF nbr 10.250.255.130\n  Outgoing interface list:\n    Vlan200, Forward/Sparse-Dense, 00:00:07/00:02:52\n</code></pre> <ul> <li>Incoming interface: the upstream interface<ul> <li>No ECMP in the multicast table, there is a tie breaker<ul> <li>For multiple groups, even and odd groups are 'load split'</li> </ul> </li> </ul> </li> <li>Outgoing interface list: the downstream interface(s)</li> </ul>"},{"location":"studies/ccie-ei/multicast/#multicast-routing-protocol-pim","title":"Multicast Routing Protocol (PIM)","text":"<code>PIM</code> Protocol independent multicast"},{"location":"studies/ccie-ei/multicast/#primary-responsibilities-per-route","title":"Primary Responsibilities per route","text":"<ol> <li>Identify upstream interface (IIF)</li> <li>Identify downstream interfaces (OIL)</li> <li>Maintain dynamic multicast trees</li> </ol>"},{"location":"studies/ccie-ei/multicast/#multicast-trees","title":"Multicast Trees","text":"<ul> <li>Root depends on type of group<ul> <li>(S,G) trees are rooted at source</li> <li>(*,G) trees are shared trees</li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/multicast/#loop-prevention","title":"Loop Prevention","text":"<code>RPF Check</code> Does source IP of packet correspond to IIF? If not, drop it. <p>Multicast only receives packets from the IIF</p>"},{"location":"studies/ccie-ei/multicast/#igmp","title":"IGMP","text":"<code>IGMP</code> Internet Group Management Protocol <ul> <li>Receiver (host) signals it's interest in a multicast stream to the closest routers on the network</li> <li>Closest routers to the receiver are LHR: last hop routers</li> <li>Closest router to the source are FHR: first hop router</li> </ul>"},{"location":"studies/ccie-ei/multicast/#igmp-v1v2","title":"IGMP v1/v2","text":"<ul> <li>Routers are signaled for ASM (*,G). SSM (S,G) not supported in v1/v2.</li> </ul> Join a multicast group on IOS<pre><code>interface &lt;intf&gt;\n ip igmp join-group &lt;multicast-ip&gt;\n</code></pre>"},{"location":"studies/ccie-ei/multicast/#igmp-messages","title":"IGMP Messages","text":"<ol> <li>IGMP Membership report (JOIN)<ul> <li>Host -&gt; LHR \"I would like to join this group\"</li> <li>Src: Host IP, Dst: Multicast group IP</li> </ul> </li> <li>IGMP Membership query, general (QUERIER)<ul> <li>? -&gt; Downstream routers \"Which groups are you interested in?\"</li> <li>Src: Router IP, Dst: 224.0.0.1 (All IP Hosts)</li> </ul> </li> </ol> Enable Multicast routing on Cisco router<pre><code>! Enable multicast globally\nip multicast-routing &lt;distributed&gt;\n\n! Enable multicast on all multicast interfaces (On LHR/FHR facing sources/receivers)\ninterface &lt;intf&gt;\n ip pim &lt;sparse-mode|sparse-dense-mode&gt; ! (sparse-mode if not using AutoRP)\n</code></pre> <p>Designated Querier always the lowest IP</p>"},{"location":"studies/ccie-ei/multicast/#source-specific-multicast-ssm","title":"Source Specific Multicast (SSM)","text":"<ul> <li>Requires IGMPv3</li> </ul> Join a multicast SSM group on IOS<pre><code>interface &lt;intf&gt;\n ip igmp join-group &lt;multicast-ip&gt; source &lt;source-ip&gt;\n</code></pre>"},{"location":"studies/ccie-ei/multicast/#igmpv3","title":"IGMPv3","text":"<ul> <li>Completely new protocol, not backwards compatible</li> </ul> Enable IGMPv3<pre><code>ip igmp version 3\n</code></pre>"},{"location":"studies/ccie-ei/ospf/","title":"OSPF","text":""},{"location":"studies/ccie-ei/ospf/#overview","title":"Overview","text":""},{"location":"studies/ccie-ei/ospf/#areas","title":"Areas","text":"<ul> <li>Backbone area (0) is required any time you have more than a single area</li> </ul>"},{"location":"studies/ccie-ei/ospf/#routers-roletype","title":"Router's Role/Type","text":"<code>Internal router</code> All interfaces in same area <code>Backbone router</code> Has an interface in area 0 <code>Area border router (ABR)</code> Has an interface in area 0 and another area. Must also be a backbone router Use <code>show ip ospf border</code> to determine ABR/ASBR <code>Autonomous System Border Router (ASBR)</code> Performs redistribution to/from another routing domain Originates LSA Type-5 or LSA Type-7"},{"location":"studies/ccie-ei/ospf/#virtual-links-and-gre-tunnels-da1","title":"Virtual-links and GRE Tunnels DA#1","text":"<ul> <li>Area 0 cannot be discontiguous</li> <li>Use virtual-link to allow backbone area transit over another area</li> <li>Is not data plane, just allows establishment of control plane<ul> <li>i.e. packets are not moving over the virtual link</li> </ul> </li> </ul> <p>Virtual link configuration: <pre><code>router ospf &lt;pid&gt;\n area &lt;transit-area&gt; virtual-link &lt;target-rid&gt;\n</code></pre></p> <p>Show virtual links: <code>show ip ospf virtual-links</code></p>"},{"location":"studies/ccie-ei/ospf/#gre-tunnel-vs-virtual-link","title":"GRE tunnel vs virtual-link","text":"<ul> <li>Virtual link: control plane only, not found in routing table<ul> <li>\"GRE tunnel for only OSPF traffic\"</li> </ul> </li> <li>GRE tunnel: control and data plane<ul> <li>By default, OSPF cost 1000</li> </ul> </li> </ul>"},{"location":"studies/ccie-ei/ospf/#ospf-and-bgp-rid-bgp-synchornization-da2","title":"OSPF and BGP RID. BGP synchornization DA#2","text":"<code>OSPF RID</code> 32-bit dotted-decimal value, unique in entire routing domain. Is not an IP address Numerically highest IP address will be chosen if not defined <code>BGP synchronization</code> Requires a route to be seen via IGP to be valid in BGP OSPF and BGP RID must also match at point of EGP/IGP redistribution"},{"location":"studies/ccie-ei/ospf/#split-horizon-rule","title":"Split-Horizon Rule","text":"<p>Areas must use the backbone area to communicate between one another</p>"},{"location":"studies/ccie-ei/ospf/#capability-transit-da3","title":"Capability Transit DA#3","text":"<ul> <li>Enabled by default</li> <li>Overrides the split horizon rule, so data plane traffic may transit directly between non-zero areas</li> <li>If disabled, traffic would try to transit through area-0</li> </ul> <p>To turn off: <pre><code>router ospf &lt;pid&gt;\n no capability transit\n</code></pre></p>"},{"location":"studies/ccie-ei/ospf/#lsas","title":"LSAs","text":"<p>Advertisements regarting the states of links</p>"},{"location":"studies/ccie-ei/ospf/#lsa-types","title":"LSA Types","text":"LSA Advertising Rtr Rt Tbl Database 1 All routers <code>O</code> <code>show ip ospf database router</code> 2 DR <code>O</code> <code>show ip ospf database network</code> 3 ABR <code>O IA</code> <code>show ip ospf database summary</code> 4 ABR <code>show ip ospf database asbr-summary</code> 5 ASBR <code>O E2</code> <code>O E1</code> <code>show ip ospf database external</code> 7 ASBR <code>O N2</code> <code>O N1</code> <code>show ip ospf database nssa-external</code> <code>Type-1</code> Router LSA intra-area routers <code>Type-2</code> Network LSA intra-area multi-access networks <code>Type-3</code> Summary LSA inter-area routes <code>Type-4</code> <p>Summary ASBR LSA Reachability to the ASBR</p> <ul> <li>\"If you want to connect to the router in the LSID, go to the router in the Adv_R\"</li> <li>LSID = RID of external router</li> <li>Adv_R = </li> <li>Metric = cost from my area to redistributed route</li> </ul> <code>Type-5</code> <p>External routes (from another routing domain)</p> <ul> <li>Contains an LSID (route I distribute)</li> <li>Contains an Adv_R (route originating LSA)</li> <li>Contains an FA (next hop)=0.0.0.0 suppressed - found by looking up Type-1 LSA for Adv_R</li> </ul> <code>Type-7</code> <p>NSSA LSA</p> <ul> <li>LSID=network</li> <li>Adv_R=RID of advertiser</li> <li>FA=IP of ASBR not suppressed in NSSA</li> </ul>"},{"location":"studies/ccie-ei/ospf/#type-7-to-type-5-conversion","title":"Type-7 to Type-5 Conversion","text":"<p>N2 route converted to E2 route Type-7 routes converted into Type-5 going to area 0 FA is not suppressed, no Type-4 is advertised</p>"},{"location":"studies/ccie-ei/ospf/#external-route-metrics","title":"External route metrics","text":"<code>E2/N2</code> Cost of network from advertising ASBR (cost=20) <code>E1/N1</code> Cost of network from advertising router + cost of me to ASBR"},{"location":"studies/ccie-ei/ospf/#bit-types","title":"Bit types","text":"<code>E-bit</code> I have capability of having external routes in my table. Normal area E is set, Stub area E is cleared <code>V-bit</code> I termimnate a virtual link. <code>B-bit</code> I am an ABR"},{"location":"studies/ccie-ei/ospf/#traffic-types","title":"Traffic types","text":"<code>intra-area</code> Traffic within same area <code>inter-area</code> Traffic that enters one area from another area (same routing domain) <code>external</code> Traffic that was redistributed into my routing domain"},{"location":"studies/ccie-ei/ospf/#ospf-drbdr","title":"OSPF DR/BDR","text":"<p>DR/BDR is elected on multi-access network.</p> <ul> <li>Prevents full-mesh of adjacencies<ul> <li>each router establishes adjaceny with only DR</li> <li>DR floods updates to <code>DROthers</code></li> </ul> </li> <li>OSPF priority=1 by default, 0=don't participate</li> <li>Tie-breaker: highest OSPF RID</li> </ul>"},{"location":"studies/ccie-ei/ospf/#rfc5185","title":"RFC5185","text":""},{"location":"studies/ccie-ei/ospf/#da4","title":"DA#4","text":"<p>Note: intra-area routes (stay in same area) preferred over inter-area routers</p> <p>Allows a link to be configured in multiple areas</p> <ul> <li>Must be a point to point link from OSPF's perspective</li> </ul> <p><code>ip ospf multi-area &lt;area-id&gt;</code></p> <p>Must configure link as point-to-point: <pre><code>R2#show ip ospf multi-area \nOSPF_MA0 is down, line protocol is down \n  Primary Interface GigabitEthernet0/1, Area 1\n  Interface ID 3\n  MTU is 1500 bytes\n  Interface DOWN as link is not P2P\n</code></pre></p> <p>Multi-area established w/ 1 neighbor: <pre><code>R2#show ip ospf multi-area \nOSPF_MA0 is up, line protocol is up \n  Primary Interface GigabitEthernet0/1, Area 1\n  Interface ID 3\n  MTU is 1500 bytes\n  Neighbor Count is 1\n</code></pre></p> <p>Two neighborships shown: <pre><code>R2#show ip ospf neighbor \n\nNeighbor ID     Pri   State           Dead Time   Address         Interface\n0.0.0.1           0   FULL/  -        00:00:30    12.1.1.1        GigabitEthernet0/1\n0.0.0.1           0   FULL/  -        00:00:32    12.1.1.1        OSPF_MA0\n</code></pre></p> <p>Virtual interface is created: <pre><code>R2#show ip ospf int br\nInterface    PID   Area            IP Address/Mask    Cost  State Nbrs F/C\nGi0/1        1     0               12.1.1.2/24        1     P2P   1/1\nMA0          1     1               Unnumbered Gi0/1   1     P2P   1/1\n</code></pre></p>"},{"location":"studies/ccie-ei/ospf/#da5","title":"DA#5","text":"<p>Use RFC5185 multi-area to give the ASBR a link in another area</p> <ul> <li>Routes are not redistributed into a given area, just into the OSPF routing domain</li> </ul> <p>ASBR cannot exist in a stub area: <code>*Dec 17 17:26:15.631: %OSPF-4-ASBR_WITHOUT_VALID_AREA: Router is currently an ASBR while having only one area which is a stub area</code></p>"},{"location":"studies/ccie-ei/ospf/#ospf-recursion-process-da6","title":"OSPF Recursion Process (DA#6)","text":"<p><pre><code>R1#show ip ospf database external \n\n            OSPF Router with ID (0.0.0.1) (Process ID 1)\n\n                Type-5 AS External Link States\n\n  LS age: 90\n  Options: (No TOS-capability, DC, Upward)\n  LS Type: AS External Link\n  Link State ID: 4.4.4.0 (External Network Number )\n  Advertising Router: 0.0.0.4\n  LS Seq Number: 80000001\n  Checksum: 0x3F51\n  Length: 36\n  Network Mask: /24\n        Metric Type: 2 (Larger than any link state path)\n        MTID: 0 \n        Metric: 20 \n        Forward Address: 0.0.0.0\n        External Route Tag: 0\n</code></pre> Suppressed Fwd_Address? Go to router with RID of Adv_R</p> <p>Look for Adv_R: <pre><code>R1#show ip ospf database router adv-router 0.0.0.4\n\n            OSPF Router with ID (0.0.0.1) (Process ID 1)\n</code></pre> Can't find this Adv_R RID in own area?</p> <p>Go look for LSA Type-4: <pre><code>R1#show ip ospf database asbr-summary 0.0.0.4\n\n            OSPF Router with ID (0.0.0.1) (Process ID 1)\n\n                Summary ASB Link States (Area 1)\n\n  LS age: 212\n  Options: (No TOS-capability, DC, Upward)\n  LS Type: Summary Links(AS Boundary Router)\n  Link State ID: 0.0.0.4 (AS Boundary Router address)\n  Advertising Router: 0.0.0.2\n  LS Seq Number: 80000001\n  Checksum: 0x4C69\n  Length: 28\n  Network Mask: /0\n        MTID: 0         Metric: 128 \n</code></pre></p> <p>Go look for this Adv_R <pre><code>R1#show ip ospf database router adv-router 0.0.0.2\n\n            OSPF Router with ID (0.0.0.1) (Process ID 1)\n\n                Router Link States (Area 1)\n\n  LS age: 294\n  Options: (No TOS-capability, DC)\n  LS Type: Router Links\n  Link State ID: 0.0.0.2\n  Advertising Router: 0.0.0.2\n  LS Seq Number: 80000002\n  Checksum: 0x725B\n  Length: 36\n  Area Border Router\n  Number of Links: 1\n\n    Link connected to: a Transit Network\n     (Link ID) Designated Router address: 12.1.1.2\n     (Link Data) Router Interface address: 12.1.1.2\n      Number of MTID metrics: 0\n       TOS 0 Metrics: 64\n</code></pre></p> <p>How do I get to 12.1.1.2? <pre><code>R1#show ip route 12.1.1.2\nRouting entry for 12.1.1.0/24\n  Known via \"connected\", distance 0, metric 0 (connected, via interface)\n  Routing Descriptor Blocks:\n  * directly connected, via GigabitEthernet0/2\n      Route metric is 0, traffic share count is 1\n</code></pre></p> <p>We are directly connected, so just go directly to 12.1.1.2. <pre><code>R1#show ip route 4.4.4.0\nRouting entry for 4.4.4.0/24\n  Known via \"ospf 1\", distance 110, metric 20, type extern 2, forward metric 192\n  Last update from 12.1.1.2 on GigabitEthernet0/2, 00:05:14 ago\n  Routing Descriptor Blocks:\n  * 12.1.1.2, from 0.0.0.4, 00:05:14 ago, via GigabitEthernet0/2\n      Route metric is 20, traffic share count is 1\n</code></pre></p>"},{"location":"studies/ccie-ei/ospf/#same-thing-in-an-nssa-area","title":"Same thing in an NSSA area","text":"<pre><code>R4#show ip ospf database nssa-external \n\n            OSPF Router with ID (0.0.0.4) (Process ID 1)\n\n                Type-7 AS External Link States (Area 2)\n\n  LS age: 49\n  Options: (No TOS-capability, Type 7/5 translation, DC, Upward)\n  LS Type: AS External Link\n  Link State ID: 4.4.4.0 (External Network Number )\n  Advertising Router: 0.0.0.4\n  LS Seq Number: 80000001\n  Checksum: 0x73EA\n  Length: 36\n  Network Mask: /24\n        Metric Type: 2 (Larger than any link state path)\n        MTID: 0 \n        Metric: 20 \n        Forward Address: 34.1.1.4\n        External Route Tag: 0\n</code></pre> <p>Type 7/5 translation means P-bit is set (propagate bit)</p> <p>When LSA is converted from type7/5 on <code>0.0.0.3</code>, it becomes the Adv_R, Fwd_Addr is propagated: <pre><code>R1#show ip ospf database external \n\n            OSPF Router with ID (0.0.0.1) (Process ID 1)\n\n                Type-5 AS External Link States\n\n  LS age: 127\n  Options: (No TOS-capability, DC, Upward)\n  LS Type: AS External Link\n  Link State ID: 4.4.4.0 (External Network Number )\n  Advertising Router: 0.0.0.3\n  LS Seq Number: 80000001\n  Checksum: 0xE5B\n  Length: 36\n  Network Mask: /24\n        Metric Type: 2 (Larger than any link state path)\n        MTID: 0 \n        Metric: 20 \n        Forward Address: 34.1.1.4\n        External Route Tag: 0\n</code></pre></p> <p>Example The 34.1.1.4 network (Fwd_Addr) is suppressed upstream. 4.4.4.0 network is removed from the routing table since ASBR is not accessible to R1.</p> <p>Solution: suppress the FA when type7 is converted to type4. Now normal recursion will be used on R1 to find Type-4 LSA to provide reachability to the ASBR (R3). R3#show run | sec router ospf router ospf 1  router-id 0.0.0.3  area 2 nssa translate type7 suppress-fa  area 2 range 34.1.1.0 255.255.255.0 not-advertise</p>"},{"location":"studies/ccie-ei/ospf/#multiple-abr-in-nssa-da7","title":"Multiple ABR in NSSA (DA#7)","text":"<p>In NSSA with multiple ABR's, there is an election and the highest RID becomes the advertising router (and performs type7 to type5)</p> <p>Override higher RID with: <code>R3(config-router)#area 1 nssa translate type7 always</code></p> <p>Do this on multiple ABR's and both will be the advertising router.</p>"},{"location":"studies/ccie-ei/ospf/#network-type-impact-on-redistribution-da8","title":"Network type impact on redistribution (DA#8)","text":"<p>Show all ABR/ASBR and cost to routers <pre><code>R5#show ip ospf border-routers \n\n            OSPF Router with ID (0.0.0.5) (Process ID 1)\n\n\n                Base Topology (MTID 0)\n\nInternal Router Routing Table\nCodes: i - Intra-area route, I - Inter-area route\n\ni 0.0.0.3 [1] via 35.1.1.3, GigabitEthernet0/3, ASBR, Area 0, SPF 3\ni 0.0.0.4 [1] via 45.1.1.4, GigabitEthernet0/4, ASBR, Area 0, SPF 3\n</code></pre></p> <p>When redistributing, a P2P network type will result in a supressed FA. Broadcast network type will set the FA to the specific address (since multiple routers could exist on the segment)</p>"},{"location":"studies/ccie-ei/ospf/#da9","title":"(DA#9)","text":"<p>Fwd_Addr must be an IA route in OSPF, otherwise route will be ignored.</p>"},{"location":"studies/ccie-ei/ospf/#rfc2328-da10","title":"RFC2328 (DA#10)","text":"<p>RFC2328 \"When the network numbers (in an LSID) are identical, there must be a way to differentiate one network from another.\"</p> <ul> <li>Least specific route: gets the normal LSID</li> <li>More specific routes: uses broadcast address of that network</li> </ul> <pre><code>R2#show ip ospf d external \n\n            OSPF Router with ID (0.0.0.2) (Process ID 1)\n\n                Type-5 AS External Link States\n\n  LS age: 232\n  Options: (No TOS-capability, DC, Upward)\n  LS Type: AS External Link\n  Link State ID: 2.0.0.0 (External Network Number )\n  Advertising Router: 0.0.0.2\n  LS Seq Number: 80000001\n  Checksum: 0xC1DA\n  Length: 36\n  Network Mask: /8\n        Metric Type: 2 (Larger than any link state path)\n        MTID: 0 \n        Metric: 20 \n        Forward Address: 0.0.0.0\n        External Route Tag: 0\n\n  LS age: 232\n  Options: (No TOS-capability, DC, Upward)\n  LS Type: AS External Link\n  Link State ID: 2.0.255.255 (External Network Number )\n  Advertising Router: 0.0.0.2\n  LS Seq Number: 80000001\n  Checksum: 0xC1DA\n  Length: 36\n  Network Mask: /16\n        Metric Type: 2 (Larger than any link state path)\n        MTID: 0 \n        Metric: 20 \n        Forward Address: 0.0.0.0\n        External Route Tag: 0\n</code></pre>"},{"location":"studies/ccie-ei/ospf/#rfc1583-rfc2328-da11","title":"RFC1583 &amp; RFC2328 (DA#11)","text":"<p>By default RFC1583 is used</p> <code>RFC1583</code> \"The cost of a summary should be based on the lowest cost of a specific route within that summary.\" <code>RFC2328</code> \"The cost of a summary should be based on the highest cost of a specific route within that summary.\" <p>To implement RFC2328: <pre><code>router ospf &lt;pid&gt;\n    no compatible rfc 1583\n</code></pre></p>"},{"location":"studies/ccie-ei/ospf/#route-precedence-da12","title":"Route precedence (DA#12)","text":"<ul> <li>Default: N is preferred over E (RFC3101)<ul> <li>RFC1587 E is preferred over N</li> </ul> </li> <li>OSPF lower PID is preferred when running two PIDs</li> </ul>"},{"location":"studies/ccie-ei/ospf/#preference-of-routes","title":"Preference of routes:","text":"<ol> <li>Intra area <code>O</code> routes<ul> <li>More than one entry? Use lower OSPF PID</li> </ul> </li> <li>Inter area <code>O IA</code> routes</li> <li>External NSSA Type 1 <code>O N1</code><ul> <li>E1 and N1 route competing? If Fwd_Addr is different, cost will be referenced before RFC3101</li> </ul> </li> <li>External Type 1 <code>O E1</code></li> <li>External NSSA Type 2 <code>O N2</code></li> <li>External Type 2 <code>O E2</code></li> </ol>"},{"location":"studies/ccie-ei/sdaccess/","title":"SD-Access","text":"<ul> <li>FIAB \"Fabric in a Box\" - holds control plane, border, edge node roles on same device</li> </ul>"},{"location":"studies/ccie-ei/sdaccess/#node-types","title":"Node Types","text":"<ul> <li>Control plane - running LISP</li> <li>Border (L2 or L3 border) - running BGP</li> </ul>"},{"location":"studies/ccie-ei/sdaccess/#sda-tasks-to-know","title":"SDA Tasks to Know","text":"<ol> <li>FIAB</li> <li>Create+Admin ISE to DNAC integration</li> <li>Create+Admin virtual networks (i.e. VRFs)</li> <li>Create+Admin IP Pools</li> <li>Create+Admin SGTs</li> <li>Add SGT to VN</li> <li>Discover Switches</li> <li>Assign Devices</li> <li>Provision Devices</li> <li>Assign IP Pools to VN</li> <li>Create L3 Border ? to a vEdge</li> <li>Assign Fabric Roles (control/border/edge)</li> <li>Onboard Wi? host</li> <li>Implement SG-ACL</li> </ol>"},{"location":"studies/ensdwi/1-architecture/","title":"1.0 Architecture","text":""},{"location":"studies/ensdwi/1-architecture/#11-describe-cisco-sd-wan-architecture-and-components","title":"1.1 Describe Cisco SD-WAN architecture and components","text":"Device Plane Use vManage Management Creation of policy, Edge config vSmart Control Calc/deploy control/data policy vBond Orchestration Initial fabric discovery/auth WAN Edge Data Routing/forwarding of user traffic"},{"location":"studies/ensdwi/1-architecture/#11a-orchestration-plane-vbond-nat","title":"1.1.a Orchestration plane (vBond, NAT)","text":"<ul> <li>Provides initial authentication for the fabric, discovery of components</li> <li>Multiple vBond can be dpeployed for HA<ul> <li>Use single DNS record to point to all vBond IPs, WAN Edge will try each sequentially</li> </ul> </li> </ul> <p>When a WAN Edge joins the overlay, it only knows vBond - Discovered from PNP, ZTP, Bootstrap, or manually - Once connectivity is established to vManage/vSmart, the vBond-&gt;Edge connection is torn down - Communicates using DTLS (Datagram TLS)</p>"},{"location":"studies/ensdwi/1-architecture/#nat","title":"NAT","text":"<ul> <li>vBond rovides STUN server (RFC 5389) for NAT discovery<ul> <li>Informs WAN edges if they are behind NAT</li> </ul> </li> <li>vBond must be publicly addressable (or 1:1 static NAT)<ul> <li>vManage/vSmart can be behind PAT, using STUN like WAN edge</li> </ul> </li> </ul> <p>| Type                      | Behavior                              | Notes                                     | | Static 1:1 \"full cone\"    | External can initiate, always open    | Works well with SD-WAN                    | | Dynamic PAT \"symmetric\"   | Many hosts, inside initiates          | Other side can't be symmetric             | | Address restricted cone   | Inside init, then any external        | Other side can't be symmetric             | | Port restricted cone      | Inside inits, then filtered external  | Other side can't be symmetric             |</p>"},{"location":"studies/ensdwi/1-architecture/#11b-management-plane-vmanage","title":"1.1.b Management plane (vManage)","text":"<ul> <li>3+ vManage can be clustered, always an odd number<ul> <li>Cluster can manage 6K WAN Edges (2K per node)</li> </ul> </li> </ul>"},{"location":"studies/ensdwi/1-architecture/#tenancy-options","title":"Tenancy options","text":"Type Description Dedicated Each tenant has dedicated components, data plane is segmented VPN tenancy Segments data plane only, shares SD-WAN components Enterprise Orchestration/management in multi-tenancy mode, control plane is per-tenant"},{"location":"studies/ensdwi/1-architecture/#vanalytics","title":"vAnalytics","text":"<ul> <li>Provides insight into the WAN</li> <li>Global application performance, capacity planning</li> <li>Ingests data from the network and uses ML to predict trends</li> <li>vManage = realtime, raw data view</li> <li>vAnalytics = historical performance, forward-looking</li> </ul>"},{"location":"studies/ensdwi/1-architecture/#11c-control-plane-vsmart-omp","title":"1.1.c Control plane (vSmart, OMP)","text":"<ul> <li>vSmart can handle 5400 connections per server</li> <li>Should be geographically dispersed, each vSmart is autonomous (no sync)</li> <li>Up to 20 vSmarts supported in a deployment</li> <li>Implements control plane policies, centralized data policies, service chaining, VPN topologies</li> <li>Handles security and encryption (key management)<ul> <li>WAN edge will compute it's own keys per transport and distribute to vSmart, which will re-distribute them back to other WAN edges (per policy)</li> <li>Handles IPsec SA rekeying</li> <li>WAN Edge doesn't need to handle key negotiation/distribution</li> </ul> </li> <li>Similar to an iBGP route reflector<ul> <li>Routing/topology info is recieved from clients, best-path calculated (based on policy), and advertised to other clients</li> </ul> </li> </ul>"},{"location":"studies/ensdwi/1-architecture/#control-plane-tunnels","title":"Control Plane Tunnels","text":"<ul> <li>Encrypted/Authenticated via DTLS or TLS<ul> <li>DTLS preferred (UDP 12346)</li> <li>TLS uses TCP</li> <li>out of order/lost packets can be handled</li> <li>vSmart/vManage ports match up to cores<ul> <li>0: 12346, 1: 12446, 2: 12546, 3: 12646, 4: 12746, 5: 12846, 6: 12946, 7: 13046</li> </ul> </li> </ul> </li> <li>DTLS/TLS connections are maintained between all devices in SD-WAN overlay</li> <li>Negotiated using SSL certificates (each component auths the other, creates one way tunnel)<ul> <li>Device validates recieved cert is signed by a trusted root and has valid serial number w/ matching org name</li> </ul> </li> <li>Carry OMP, SNMP, Netconf data</li> </ul>"},{"location":"studies/ensdwi/1-architecture/#omp","title":"OMP","text":"<ul> <li>Overlay Management Protocol</li> <li>Runs inside of a DTLS/TLS control plane tunnel, exchanges routing, key management, config updates</li> <li>Example: when a policy is configured vManage distributes to vSmart (NETCONF), vSmart distributes to WAN edge (OMP)</li> <li>Provides services like:<ul> <li>Facilitates network communication on the fabic (data plane, service chaining, multi-VPN topology)</li> <li>Advertises services</li> <li>Security information (encryption keys)</li> <li>Best path selection and routing policy advertisement</li> </ul> </li> <li>Enabled by default<ul> <li>Can interact with OSPF, BGP, EIGRP</li> <li>Peering between Edge&lt;-&gt;vSmart only</li> </ul> </li> <li>Graceful restart<ul> <li>Enabled by default</li> <li>WAN edges cache forwarding information<ul> <li>Default timer 12 hours (min: 1s, max 7d)</li> <li>Still requires valid data plane tunnels (IPsec keys)<ul> <li>Set IPSEC rekey timer to 2x graceful restart timer</li> </ul> </li> </ul> </li> </ul> </li> <li>Admin distance of 250 (vEdge) and 251 (cEdge)</li> </ul> <p>OMP route types - OMP route (or vRoute) - TLOC - Service route: Network service such as firewall, IDS</p>"},{"location":"studies/ensdwi/1-architecture/#service-route","title":"Service Route","text":"<p>Enables service chaining (sending data traffic through a service before going to destination)</p> <p>Contains these attributes:</p> <ul> <li>VPN ID VPN the service belongs to</li> <li>Service ID FW (svc-id 1), IDS (svc-id 2), IDP (svc-id 3), netsvc1-4 (svc-id 4-7)</li> <li>Label OMP routes with traffic that must flow through the service will have their label field replaced with this label</li> <li>Originator ID system IP</li> <li>TLOC TLOC where service is located</li> <li>Path ID Identifier for OMP path</li> </ul>"},{"location":"studies/ensdwi/1-architecture/#omp-path-selection","title":"OMP Path selection","text":"<p>Only OMP route with valid TLOCs (BFD session is up) are selected</p> <ol> <li>Valid OMP route? (TLOC is valid? BFD session is up?)</li> <li>Prefer locally originated route</li> <li>Prefer lower AD</li> <li>Prefer higher OMP pref</li> <li>Prefer higher TLOC pref</li> <li>Prefer origin (connected, static, eBGP, EIGRP, OSPF intra-area, OSPF inter-area, OSPF external, EIGRP external, iBGP, Unknown)</li> <li>Lowest origin metric</li> <li>Highest system IP</li> <li>Highest TLOC private address</li> </ol> <p>vSmart can advertise up to 16 equal cost routes (default is 4) <pre><code>omp\n ecmp-limit 4\n</code></pre></p>"},{"location":"studies/ensdwi/1-architecture/#omp-loop-prevention","title":"OMP Loop prevention","text":"<ul> <li>OSPF When a route is redistributed from OMP-&gt;OSPF, down bit is set<ul> <li>WAN edge will drop advertisement with down bit set</li> </ul> </li> <li>BGP site of origin (SoO) BGP extended community is set to OMP site ID<ul> <li>WAN edge will drop advertisements with SoO == site ID</li> <li>All BGP peers must send BGP extended communities and have same site ID</li> </ul> </li> <li>EIGRP external protocol field is set to OMP-Agent<ul> <li>WAN edge will recieve advertisement into EIGPR topology table, but set <code>SD-WAN-Down</code> bit and AD to 252 (makes OMP route preferred)</li> </ul> </li> </ul>"},{"location":"studies/ensdwi/1-architecture/#11d-data-plane-wan-edge","title":"1.1.d Data plane (WAN Edge)","text":"<ul> <li>Where the SD-WAN overlay resides, forwards network traffic</li> <li>Enforcement of data policies (QoS, AAR)</li> <li>Establishes connections to other components<ul> <li>data plane connections with other routers, only connects to other data plane devices</li> <li>control plane connections across each transport to up to 3 vSmart (only needs one)<ul> <li>max-control-connections has ability to disable control plane on a specific transport</li> <li>if control plane connection is lost, WAN edge will forward data plane traffic for 12 hours</li> </ul> </li> <li>management plane connection to vManage (only one)</li> </ul> </li> <li>Firewall - only allows explicit inbound traffic (like SSH, NETCONF, NTP, OSPF, BGP, and STUN)</li> </ul>"},{"location":"studies/ensdwi/1-architecture/#11d-i-tloc","title":"1.1.d (i) TLOC","text":"<p>Transport Location Identifier</p> <ul> <li>Identifier that ties an OMP route to a physical location</li> <li>TLOC is only IP known and reachable from underlying network</li> <li>Routable to the underlay, endpoint of data plane tunnels (like GRE tunnel source/destination)</li> <li>Advertised for each transport when a WAN edge has multiple</li> </ul> <p>Contains these attributes:</p> <ul> <li>system IP of WAN edge</li> <li>Color defines the transport, 22 predefined colors (also defines public/private)</li> <li>encapsulation type IPSec or GRE, must match both sides</li> <li>TLOC private address private IP of WAN edge</li> <li>TLOC public address public IP of WAN edge</li> <li>Preference Prefer higher - can prefer one TLOC when comparing OMP route</li> <li>Site ID originator of the TLOC</li> <li>Tag similar to route tag</li> <li>Weight locally significant, prefer higher</li> </ul>"},{"location":"studies/ensdwi/1-architecture/#color","title":"Color","text":"<ul> <li>22 predefined colors<ul> <li>Private colors: only used when no NAT between devices in the overlay<ul> <li>metro-ethernet, mpls, private1-6</li> </ul> </li> <li>Public colors: use when NAT exists between overlay devices<ul> <li>3g, biz-internet, public-internet, lte, blue, bronze, custom1-3, gold, green, red, silver</li> </ul> </li> <li>Default used when no color is defined</li> </ul> </li> <li>WAN edges can only have one interface of each color</li> <li>WAN edges attempt to build data plane tunnels to every other site using every color</li> <li>Use restrict to restrict a color to only form tunnels with same color<ul> <li>restrict is an OMP attribute inside the TLOC route</li> <li>Can also use tunnel groups<ul> <li>Tunnels only form with matching tunnel groups</li> </ul> </li> </ul> </li> </ul>"},{"location":"studies/ensdwi/1-architecture/#11d-ii-ipsec-and-gre","title":"1.1.d (ii) IPsec and GRE","text":""},{"location":"studies/ensdwi/1-architecture/#11d-iii-vroute-aka-omp-route","title":"1.1.d (iii) vRoute (aka OMP route)","text":"<ul> <li>Synonym for OMP route</li> <li>Network prefixes, must resolve their next hop to a TLOC route</li> <li>Can advertise connected, static routes as well as redistribution from OSPF, EIGRP, BGP</li> </ul> <p>Contains these attributes:</p> <ul> <li>TLOC next hop of the OMP route</li> <li>System IP Address similar to RID, unique across WAN edges</li> <li>Color mark a specific WAN connection</li> <li>Origin Source of the route (BGP, EIGRP, Connected, Static) and original metric</li> <li>Originator Where the route was learned from (system IP of advertiser)</li> <li>Preference OMP preference (prefers higher)</li> <li>Service If a service is associated</li> <li>Site ID Similar to BGP ASN, unique site ID</li> <li>Tag Optional, transitive - similar to route tag</li> <li>VPN VPN/VRF</li> </ul>"},{"location":"studies/ensdwi/1-architecture/#11d-iv-bfd","title":"1.1.d (iv) BFD","text":"<ul> <li>Used inside of IPsec tunnels between WAN Edges.</li> <li>Sends Hello packets to measure link liveness, packet loss, jitter, delay</li> <li>Echo mode (neighbor only echoes message back to sender)<ul> <li>Full round-trip view of the transport</li> </ul> </li> <li>Can adjust timers, but cannot turn off</li> </ul>"},{"location":"studies/ensdwi/1-architecture/#path-mtu-discovery","title":"Path MTU discovery","text":"<ul> <li>Provided by BFD</li> <li>BFD header is padding with PMTU information</li> <li>Each tunnel is probed every minute, and MTU is calculated periodically per TLOC (IPSec session)</li> <li>Suggested to turn off PMTU-D on low bandwidth links to prevent large packets from consuming all bandwidth</li> </ul>"},{"location":"studies/ensdwi/1-architecture/#12-describe-cisco-sd-wan-edge-platforms-and-capabilities","title":"1.2 Describe Cisco SD-WAN Edge platforms and capabilities","text":""},{"location":"studies/ensdwi/1-architecture/#xe-sdwan","title":"XE-SDWAN","text":"<p>ISR1K, ISR4K, ASR1K, ENCS, CSP</p> <ul> <li>Support for additional interface types (voice, serial)</li> <li>Support for advanced security use cases<ul> <li>DNS Security (Umbrella), AMP for Endpoints, App-Aware Firewall, IDS/IPS, URL filtering</li> </ul> </li> <li>Runs IOS-XE SD-WAN</li> </ul>"},{"location":"studies/ensdwi/1-architecture/#vedge","title":"vEdge","text":"<p>vEdge 100, 1000, 2000, 5000</p> <ul> <li>Runs Viptela OS</li> </ul>"},{"location":"studies/ensdwi/1-architecture/#cloud","title":"Cloud","text":"<p>CSR1Kv, vEdge Cloud, ISRv</p>"},{"location":"studies/ensdwi/1-architecture/#13-describe-cisco-sd-wan-cloud-onramp","title":"1.3 Describe Cisco SD-WAN Cloud OnRamp","text":""},{"location":"studies/ensdwi/1-architecture/#13a-saas","title":"1.3.a SaaS","text":""},{"location":"studies/ensdwi/1-architecture/#13b-iaas","title":"1.3.b IaaS","text":""},{"location":"studies/ensdwi/1-architecture/#13c-colocation","title":"1.3.c Colocation","text":""},{"location":"studies/ensdwi/2-controller-deployment/","title":"2.0 Controller Deployment","text":""},{"location":"studies/ensdwi/2-controller-deployment/#21-describe-controller-cloud-deployment","title":"2.1 Describe controller cloud deployment","text":""},{"location":"studies/ensdwi/2-controller-deployment/#cisco-cloud-most-common","title":"Cisco Cloud (most common)","text":"<ul> <li>Cisco builds all SD-WAN components</li> </ul>"},{"location":"studies/ensdwi/2-controller-deployment/#private-cloud","title":"Private Cloud","text":"<ul> <li>Use when there is a regulatory/business compliance reason</li> <li>AWS, Azure supported</li> <li>Most have appropriate ports open for control plane connectivity, 1:1 static NAT for vBond</li> </ul>"},{"location":"studies/ensdwi/2-controller-deployment/#22-describe-controller-on-premises-deployment","title":"2.2 Describe controller on-premises deployment","text":"<ul> <li>Can be deployed in a traditional on-prem data center</li> <li>Specific CPU, memory, storage, network requirements</li> </ul>"},{"location":"studies/ensdwi/2-controller-deployment/#22a-hosting-platform-kvm-and-hypervisor","title":"2.2.a Hosting platform (KVM and Hypervisor)","text":""},{"location":"studies/ensdwi/2-controller-deployment/#22b-installing-controllers","title":"2.2.b Installing controllers","text":""},{"location":"studies/ensdwi/2-controller-deployment/#22c-scalability-and-redundancy","title":"2.2.c Scalability and redundancy","text":""},{"location":"studies/ensdwi/2-controller-deployment/#23-configure-certificates-and-device-lists","title":"2.3 Configure certificates and device lists","text":""},{"location":"studies/ensdwi/2-controller-deployment/#24-troubleshoot-control-plane-connectivity-between-controllers","title":"2.4 Troubleshoot control plane connectivity between controllers","text":""},{"location":"studies/ensdwi/3-router-deployment/","title":"3.0 Router Deployment","text":""},{"location":"studies/ensdwi/3-router-deployment/#31-describe-wan-edge-deployment","title":"3.1 Describe WAN Edge deployment","text":""},{"location":"studies/ensdwi/3-router-deployment/#31a-on-boarding","title":"3.1.a On-boarding","text":""},{"location":"studies/ensdwi/3-router-deployment/#manual-bootstrap","title":"Manual bootstrap","text":"<ul> <li>Minimal configuration including IP addressing, vBond address, system identification <pre><code>vEdge# config\nvEdge(config)# system host-name *hostname*\nvEdge(config-system)# system-ip *ip-address*\nvEdge(config-system)# site-id *site-id*\nvEdge(config-system)# organization-name *organization-name*\nvEdge(config-system)# vbond *(dns-name | ip-address)*\nvEdge(config)# vpn 0\nvEdge(config-vpn-0)# interface *interface-name*\nvEdge(config-interface)# (ip dhcp-client | ip *address* *prefix/length*)\nvEdge(config-interface)# no shutdown\nvEdge(config-interface)# tunnel-interface\nvEdge(config-tunnel-interface)# color *color*\nvEdge(config-vpn-0)# ip route 0.0.0.0/0 *next-hop*\nvEdge(config)# commit and-quit\n</code></pre></li> </ul> <pre><code>cEdge# config-transaction\ncEdge(config)# system host-name *hostname*\ncEdge(config-system)# system-ip *ip-address*\ncEdge(config-system)# site-id *site-id*\ncEdge(config-system)# vbond *(dns-name | ip-address)*\ncEdge(config-system)# organization-name *organization-name*\ncEdge(config)# interface Tunnel *intf-number*\ncEdge(config-if)# ip unnumbered *wan-phys-interface*\ncEdge(config-if)# tunnel source *wan-phys-interface*\ncEdge(config-if)# tunnel mode sdwan\ncEdge(config)# interface GigabitEthernet *intf-number*\ncEdge(config-if)# ip address *ip-address* *mask*\ncEdge(config-if)# no shutdown\ncEdge(config)# sdwan\ncEdge(config-sdwan)# interface GigabitEthernet *intf-number*\ncEdge(config-interface-interface-name)# tunnel-interface\ncEdge(config-tunnel-interface)# color *color*\ncEdge(config-tunnel-interface)# encapsulation ipsec\ncEdge(config)# ip route 0.0.0.0 0.0.0.0 *next-hop*\ncEdge(config)# ip domain-lookup\ncEdge(config)# ip name-server *dns-server-ip*\ncEdge(config)# commit \n</code></pre>"},{"location":"studies/ensdwi/3-router-deployment/#31b-orchestration-with-zero-touch-provisioning-and-plug-and-play","title":"3.1.b Orchestration with zero-touch provisioning and plug-and-play","text":"<ul> <li>Two methods of auto-provisioning WAN Edges<ul> <li>PNP: uses HTTPS to connect to Cisco PNP servers (XE SD-WAN)<ul> <li>HTTPS connection</li> <li>Device connects to devicehelper.cisco.com</li> </ul> </li> <li>ZTP: uses UDP 12346 to connect (vEdge)<ul> <li>DTLS tunnel</li> <li>Device connects to ztp.viptela.com</li> <li>Devices use specific interface for ZTP</li> </ul> </li> </ul> </li> <li>Before automatic provisioning, a device template must be attached in vManage</li> </ul>"},{"location":"studies/ensdwi/3-router-deployment/#31c-data-center-and-regional-hub-deployments","title":"3.1.c Data center and regional hub deployments","text":""},{"location":"studies/ensdwi/3-router-deployment/#32-configure-cisco-sd-wan-data-plane","title":"3.2 Configure Cisco SD-WAN data plane","text":""},{"location":"studies/ensdwi/3-router-deployment/#32a-circuit-termination-and-tloc-extension","title":"3.2.a Circuit termination and TLOC-extension","text":""},{"location":"studies/ensdwi/3-router-deployment/#32b-dynamic-tunnels","title":"3.2.b Dynamic tunnels","text":""},{"location":"studies/ensdwi/3-router-deployment/#32c-underlay-overlay-connectivity","title":"3.2.c Underlay-overlay connectivity","text":""},{"location":"studies/ensdwi/3-router-deployment/#33-configure-omp","title":"3.3 Configure OMP","text":""},{"location":"studies/ensdwi/3-router-deployment/#34-configure-tlocs","title":"3.4 Configure TLOCs","text":""},{"location":"studies/ensdwi/3-router-deployment/#35-configure-cli-and-vmanage-feature-configuration-templates","title":"3.5 Configure CLI and vManage feature configuration templates","text":"<ul> <li>Configure templates at vManage &gt; Configuration &gt; Templates<ul> <li>Feature templates Feature (tab) &gt; Add template<ul> <li>Select multple device types</li> </ul> </li> <li>Device templates Device (tab) &gt; Create template &gt; From feature template or CLI template<ul> <li>Single devie type</li> <li>Then apply to devices</li> </ul> </li> </ul> </li> <li>Device templates can be applied to multiple devices of the same type<ul> <li>4 types of info:<ul> <li>Basic info: System, Logging, AAA, BFD, OMP</li> <li>Transport/Management VPN: configuration for VPN 0 and VPN512</li> <li>Service VPN: Configuration for LAN facing interfaces and user VPNs</li> <li>Additional: local policies, security policies, SNMP, etc.</li> </ul> </li> </ul> </li> <li>Feature templates are used to build device templates, can be reused across multiple device templates<ul> <li>Allow the option to use variables within configuration parameters</li> <li>Types of values in a feature template:<ul> <li>Default: factory default and cannot be changed example: BFD timers</li> <li>Global: same configuration any time the template is used</li> <li>Device specific: user defined variables<ul> <li>Populate via vManage workflow or from CSV</li> </ul> </li> </ul> </li> </ul> </li> <li>CLI templates can be used</li> <li>If WAN edge loses control plane connection during config push, 5 minute rollback timer is started</li> </ul>"},{"location":"studies/ensdwi/3-router-deployment/#35a-vrrp","title":"3.5.a VRRP","text":""},{"location":"studies/ensdwi/3-router-deployment/#35b-ospf","title":"3.5.b OSPF","text":""},{"location":"studies/ensdwi/3-router-deployment/#35c-bgp","title":"3.5.c BGP","text":""},{"location":"studies/ensdwi/3-router-deployment/#35d-eigrp","title":"3.5.d EIGRP","text":""},{"location":"studies/ensdwi/3-router-deployment/#36-describe-multicast-support-in-cisco-sd-wan","title":"3.6 Describe multicast support in Cisco SD-WAN","text":""},{"location":"studies/ensdwi/4-policies/","title":"4.0 Policies","text":""},{"location":"studies/ensdwi/4-policies/#41-configure-control-policies","title":"4.1 Configure control policies","text":""},{"location":"studies/ensdwi/4-policies/#42-configure-data-policies","title":"4.2 Configure data policies","text":""},{"location":"studies/ensdwi/4-policies/#43-configure-end-to-end-segmentation","title":"4.3 Configure end-to-end segmentation","text":""},{"location":"studies/ensdwi/4-policies/#43a-vpn-segmentation","title":"4.3.a VPN segmentation","text":"<ul> <li>VPNs are segmented (same as VRF), each data packet carries a VPN ID</li> </ul> <p>3 Types of VPN:</p> <ul> <li>Service VPN: User traffic, multiple can exist with different topologies<ul> <li>Overlay</li> <li>Values of 1-511</li> </ul> </li> <li>Transport VPN: Physical underlay, WAN connectivity \"VPN 0\"</li> <li>Management VPN: OOB management, \"VPN 512\"</li> </ul>"},{"location":"studies/ensdwi/4-policies/#43b-topologies","title":"4.3.b Topologies","text":"<ul> <li>TLOC routes infuence how the data plane is built, filtering routes and TLOCs accomplishes topologies</li> </ul>"},{"location":"studies/ensdwi/4-policies/#44-configure-cisco-sd-wan-application-aware-routing","title":"4.4 Configure Cisco SD-WAN application-aware routing","text":""},{"location":"studies/ensdwi/4-policies/#45-configure-direct-internet-access","title":"4.5 Configure direct Internet access","text":""},{"location":"studies/ensdwi/5-security-qos/","title":"5.0 Security and Quality of Service","text":""},{"location":"studies/ensdwi/5-security-qos/#51-configure-service-insertion","title":"5.1 Configure service insertion","text":""},{"location":"studies/ensdwi/5-security-qos/#52-describe-cisco-sd-wan-security-features","title":"5.2 Describe Cisco SD-WAN security features","text":""},{"location":"studies/ensdwi/5-security-qos/#sd-wan-fabric-security","title":"SD-WAN fabric security","text":""},{"location":"studies/ensdwi/5-security-qos/#crypto-parameters","title":"Crypto parameters","text":"<ul> <li>2048-bit keys with RSA encryption</li> <li>Authenticate sender with ESP or AH</li> <li>AES 256 bit key to encrypt data</li> <li>AES 256 GCM has built in hashing to verify integrity</li> <li>Anti-Replay protection is enabled</li> </ul>"},{"location":"studies/ensdwi/5-security-qos/#key-negotiation","title":"Key negotiation","text":"<ul> <li>No ISAKMP</li> <li>Each WAN Edge generates an AES-256 bit key per transport and advertises across control plane (DTLS/TLS) tunnel to vSmart</li> <li>Keys are regenerated every 24 hours, rekey timer can be tuned<ul> <li>Symmetric keys used in an asymmetric fashion<ul> <li>Example Data going from cEdge1 to cEdge2. cEdge1 knows cEdge2's key from OMP, and will use that to encrypt data. cEdge2 will then use it's own key to decrypt.</li> </ul> </li> </ul> </li> </ul>"},{"location":"studies/ensdwi/5-security-qos/#pairwise-keys","title":"Pairwise keys","text":"<ul> <li>Additional security since the same key isn't used across all devices for encrypt/decrypt</li> <li>Each WAN edge generates a key per transport and per peer, which is advertised to vSmart<ul> <li>Example cEdge1 sending data to cEdge2. Would use the cEdge1-2 key. cEdge3-&gt;cEdge2 would use the cEdge3-2 key</li> </ul> </li> <li>Backwards compatible, and is disabled by default</li> </ul>"},{"location":"studies/ensdwi/5-security-qos/#52a-application-aware-enterprise-firewall","title":"5.2.a. Application-aware enterprise firewall","text":""},{"location":"studies/ensdwi/5-security-qos/#52b-ips","title":"5.2.b IPS","text":""},{"location":"studies/ensdwi/5-security-qos/#52c-url-filtering","title":"5.2.c URL filtering","text":""},{"location":"studies/ensdwi/5-security-qos/#52d-amp","title":"5.2.d AMP","text":""},{"location":"studies/ensdwi/5-security-qos/#52e-ssl-and-tls-proxy","title":"5.2.e SSL and TLS proxy","text":""},{"location":"studies/ensdwi/5-security-qos/#53-describe-cloud-security-integration","title":"5.3 Describe Cloud security integration","text":""},{"location":"studies/ensdwi/5-security-qos/#53a-dns-security","title":"5.3.a. DNS security","text":""},{"location":"studies/ensdwi/5-security-qos/#53b-secure-internet-gateway-sig","title":"5.3.b. Secure Internet Gateway (SIG)","text":""},{"location":"studies/ensdwi/5-security-qos/#54-configure-qos-treatment-on-wan-edge-routers","title":"5.4 Configure QoS treatment on WAN Edge routers","text":""},{"location":"studies/ensdwi/5-security-qos/#54a-scheduling","title":"5.4.a Scheduling","text":""},{"location":"studies/ensdwi/5-security-qos/#54b-queuing","title":"5.4.b Queuing","text":""},{"location":"studies/ensdwi/5-security-qos/#54c-shaping","title":"5.4.c Shaping","text":""},{"location":"studies/ensdwi/5-security-qos/#54d-policing","title":"5.4.d Policing","text":""},{"location":"studies/ensdwi/5-security-qos/#54e-marking","title":"5.4.e Marking","text":""},{"location":"studies/ensdwi/5-security-qos/#54f-per-tunnel-and-adaptive-qos","title":"5.4.f Per-tunnel and adaptive QoS","text":""},{"location":"studies/ensdwi/6-management-operations/","title":"6.0 Management and Operations","text":""},{"location":"studies/ensdwi/6-management-operations/#61-describe-authentication-monitoring-and-reporting-from-vmanage","title":"6.1 Describe authentication, monitoring, and reporting from vManage","text":""},{"location":"studies/ensdwi/6-management-operations/#62-configure-authentication-monitoring-and-reporting","title":"6.2 Configure authentication, monitoring, and reporting","text":""},{"location":"studies/ensdwi/6-management-operations/#63-describe-rest-api-monitoring","title":"6.3 Describe REST API monitoring","text":""},{"location":"studies/ensdwi/6-management-operations/#64-describe-software-image-management-from-vmanage","title":"6.4 Describe software image management from vManage","text":""}]}